<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Limour&#39;s Blog</title>
    <link>https://hexo.limour.top/</link>
    
    <atom:link href="https://hexo.limour.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 27 Sep 2025 10:26:01 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【绘图】使用Upset图替代韦恩图</title>
      <link>https://hexo.limour.top/replace-venn-diagram-with-upset-diagram</link>
      <guid>https://hexo.limour.top/replace-venn-diagram-with-upset-diagram</guid>
      <pubDate>Sat, 27 Sep 2025 08:40:36 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;配置环境&quot;&gt;配置环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/-ji-lu--an-zhuang-sheng-xin-de-dai-ma-bian-xie-huan-jing&quot;&gt;基础编程环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;hi</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="配置环境">配置环境</h2><ul><li><a href="/-ji-lu--an-zhuang-sheng-xin-de-dai-ma-bian-xie-huan-jing">基础编程环境</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n complexupset conda-forge::r-tidyverse conda-forge::r-irkernel conda-forge::r-complexupset -y<br>conda run -n complexupset Rscript -e <span class="hljs-string">&quot;IRkernel::installspec(name=&#x27;complexupset&#x27;, displayname=&#x27;r-complexupset&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;ggplot2movies&#x27;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 测试用的数据，可以不安装</span><br></code></pre></td></tr></table></figure><h2 id="使用示例">使用示例</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">require<span class="hljs-punctuation">(</span>ComplexUpset<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>RColorBrewer<span class="hljs-punctuation">)</span><br>options<span class="hljs-punctuation">(</span>repr.plot.width<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> repr.plot.height<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><br>RColorBrewer<span class="hljs-operator">::</span>display.brewer.all<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R">require<span class="hljs-punctuation">(</span>ggplot2movies<span class="hljs-punctuation">)</span><br>movies <span class="hljs-operator">=</span> as.data.frame<span class="hljs-punctuation">(</span>ggplot2movies<span class="hljs-operator">::</span>movies<span class="hljs-punctuation">)</span><br>genres <span class="hljs-operator">&lt;-</span> colnames<span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">18</span><span class="hljs-operator">:</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span><br>movies<span class="hljs-punctuation">[</span>genres<span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">[</span>genres<span class="hljs-punctuation">]</span> <span class="hljs-operator">==</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 仅用子集进行演示</span><br>movies<span class="hljs-punctuation">[</span>movies<span class="hljs-operator">$</span>mpaa <span class="hljs-operator">==</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;mpaa&#x27;</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><br>movies <span class="hljs-operator">=</span> na.omit<span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">)</span><span class="hljs-comment">#删除缺失值</span><br>t<span class="hljs-punctuation">(</span>head<span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">[</span>genres<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#倒置前三行进行查看</span><br><br>data <span class="hljs-operator">&lt;-</span> movies<span class="hljs-punctuation">[</span>genres<span class="hljs-punctuation">]</span><br>data  <span class="hljs-operator">%&gt;%</span> head <br><span class="hljs-comment"># 多维二分类变量数据，值为布尔类型，colnames为变量名</span><br><span class="hljs-comment">#   Action Animation Comedy Drama Documentary Romance Short</span><br><span class="hljs-comment"># 1  FALSE     FALSE   TRUE FALSE       FALSE    TRUE FALSE</span><br><span class="hljs-comment"># 2  FALSE     FALSE   TRUE FALSE       FALSE    TRUE FALSE</span><br><span class="hljs-comment"># 3  FALSE     FALSE   TRUE FALSE       FALSE   FALSE FALSE</span><br><span class="hljs-comment"># 4  FALSE     FALSE   TRUE  TRUE       FALSE    TRUE FALSE</span><br><span class="hljs-comment"># 5   TRUE     FALSE  FALSE FALSE       FALSE   FALSE FALSE</span><br><span class="hljs-comment"># 6  FALSE     FALSE  FALSE  TRUE       FALSE   FALSE FALSE</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R">options<span class="hljs-punctuation">(</span>repr.plot.width<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> repr.plot.height<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br>upset<span class="hljs-punctuation">(</span><br>    data<span class="hljs-punctuation">,</span> <br>    <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Action&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Comedy&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Drama&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;Romance&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;genre&#x27;</span><span class="hljs-punctuation">,</span><br>    width_ratio<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <br>    height_ratio<span class="hljs-operator">=</span><span class="hljs-number">0.382</span><span class="hljs-punctuation">,</span><br>    min_size<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>    set_sizes<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>    base_annotations<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>        <span class="hljs-string">&quot;Intersection size&quot;</span> <span class="hljs-operator">=</span> intersection_size<span class="hljs-punctuation">(</span><br>            text<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>                hjust <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>                angle <span class="hljs-operator">=</span> <span class="hljs-number">45</span><br>            <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">&quot;bars_color&quot;</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_fill_manual<span class="hljs-punctuation">(</span><br>            values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;bars_color&quot;</span> <span class="hljs-operator">=</span> RColorBrewer<span class="hljs-operator">::</span>brewer.pal<span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;Set1&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            guide <span class="hljs-operator">=</span> <span class="hljs-string">&quot;none&quot;</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> annotate<span class="hljs-punctuation">(</span><br>                geom <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;text&#x27;</span><span class="hljs-punctuation">,</span> <br>                x<span class="hljs-operator">=</span><span class="hljs-literal">Inf</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-literal">Inf</span><span class="hljs-punctuation">,</span><br>                label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;Total:&#x27;</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                vjust<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">1</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span>panel.grid<span class="hljs-operator">=</span>element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    sort_intersections_by <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;cardinality&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;degree&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    stripes<span class="hljs-operator">=</span>RColorBrewer<span class="hljs-operator">::</span>brewer.pal<span class="hljs-punctuation">(</span><span class="hljs-number">9</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;Set1&#x27;</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2025/09/27/68d7bb2be475e.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/%E7%BB%98%E5%9B%BE/">绘图</category>
      
      <category domain="https://hexo.limour.top/tags/upset/">Upset</category>
      
      
      <comments>https://hexo.limour.top/replace-venn-diagram-with-upset-diagram#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【绘图】云雨图比较两组的分布差异</title>
      <link>https://hexo.limour.top/distribution-differences-using-raincloud-chart</link>
      <guid>https://hexo.limour.top/distribution-differences-using-raincloud-chart</guid>
      <pubDate>Sat, 27 Sep 2025 05:09:19 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;配置环境&quot;&gt;配置环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/-ji-lu--an-zhuang-sheng-xin-de-dai-ma-bian-xie-huan-jing&quot;&gt;基础编程环境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;hi</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="配置环境">配置环境</h2><ul><li><a href="/-ji-lu--an-zhuang-sheng-xin-de-dai-ma-bian-xie-huan-jing">基础编程环境</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n raincloud conda-forge::r-tidyverse conda-forge::r-irkernel conda-forge::r-gghalves conda-forge::r-ggbeeswarm -y<br><span class="hljs-comment"># conda install -n raincloud conda-forge::r-ggbeeswarm -y</span><br>conda run -n raincloud Rscript -e <span class="hljs-string">&quot;IRkernel::installspec(name=&#x27;raincloud&#x27;, displayname=&#x27;r-raincloud&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><h2 id="使用示例">使用示例</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">require<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>gghalves<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>ggbeeswarm<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>require<span class="hljs-punctuation">(</span>RColorBrewer<span class="hljs-punctuation">)</span><br>options<span class="hljs-punctuation">(</span>repr.plot.width<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> repr.plot.height<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><br>RColorBrewer<span class="hljs-operator">::</span>display.brewer.all<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">data <span class="hljs-operator">&lt;-</span> iris<br>data  <span class="hljs-operator">%&gt;%</span> head<br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> Species<span class="hljs-punctuation">,</span><br>    y <span class="hljs-operator">=</span> Sepal.Length<span class="hljs-punctuation">,</span><br>    fill <span class="hljs-operator">=</span> Species<span class="hljs-punctuation">,</span><br>    color <span class="hljs-operator">=</span> Species<br><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p_color <span class="hljs-operator">&lt;-</span> RColorBrewer<span class="hljs-operator">::</span>brewer.pal<span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Dark2&quot;</span><span class="hljs-punctuation">)</span> <br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> scale_color_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span>rev<span class="hljs-punctuation">(</span>p_color<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_fill_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span>rev<span class="hljs-punctuation">(</span>p_color<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> geom_half_violin<span class="hljs-punctuation">(</span><br>    nudge <span class="hljs-operator">=</span> <span class="hljs-number">0.08</span><span class="hljs-punctuation">,</span> <br>    side <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;R&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># side：显示哪一侧， &quot;I&quot;代表左侧，&quot;R&quot;代表右侧，默认&quot;I&quot;；</span><br>    trim <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># trim：小提琴图尾部的数据修整，默认为&quot;T&quot;,表示将尾部修整到数据范围；&quot;F&quot;表示不修剪尾部；</span><br>    alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_beeswarm<span class="hljs-punctuation">(</span><br>    aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">0.08</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    side <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1L</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># side：显示哪一侧， &quot;-1L&quot;代表左侧，&quot;1L&quot;代表右侧；</span><br>    size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_boxplot<span class="hljs-punctuation">(</span><br>    outlier.shape <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 隐藏离群点；</span><br>    width <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>    alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span>panel.grid<span class="hljs-operator">=</span>element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>options<span class="hljs-punctuation">(</span>repr.plot.width<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span> repr.plot.height<span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><br>p1<br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2025/09/27/68d78281b0a1b.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/raincloud/">raincloud</category>
      
      <category domain="https://hexo.limour.top/tags/%E7%BB%98%E5%9B%BE/">绘图</category>
      
      
      <comments>https://hexo.limour.top/distribution-differences-using-raincloud-chart#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】安装 Win11 IoT LTSC</title>
      <link>https://hexo.limour.top/install-win11-iot-ltsc</link>
      <guid>https://hexo.limour.top/install-win11-iot-ltsc</guid>
      <pubDate>Sun, 08 Jun 2025 03:52:51 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;code&gt;Windows IoT LTSC&lt;/code&gt;版本十年支持，对硬件无限制，对 TPM 没有强制要求，适用于工业自动化系统、医疗仪器等固定用途执行关键业务功能的设备。&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;下载&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:</description>
        
      
      
      
      <content:encoded><![CDATA[<p><code>Windows IoT LTSC</code>版本十年支持，对硬件无限制，对 TPM 没有强制要求，适用于工业自动化系统、医疗仪器等固定用途执行关键业务功能的设备。</p><h2 id="下载">下载</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9hcmNoaXZlLm9yZy9kZXRhaWxzL3RpbnktMTEtaW90LWx0c2M=" rel="noopener external nofollow noreferrer">tiny-11-iot-ltsc</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy9kZXNrdG9wLWh5cGVydmlzb3Ivd29ya3N0YXRpb24tYW5kLWZ1c2lvbg==" rel="noopener external nofollow noreferrer">VMware</a></li></ul><h2 id="安装">安装</h2><ul><li>新建一个空白虚拟机，类型选 <code>Win10</code>，这样不用选 TPM</li><li>ios镜像路径选下载好的 <code>tiny-11-iot-ltsc.iso</code>，断网完成安装</li><li>完成后，ios镜像路径更换为VMware安装目录下对应的<code>.iso</code></li><li>启动系统后点击 <code>虚拟机-更新 VMware tools</code></li></ul><h2 id="精简空间">精简空间</h2><ul><li>删除保留的储存空间 <code>dism.exe /online /set-reservedstoragestate /state:disabled</code></li><li>删除休眠文件 <code>powercfg -h off</code></li><li>关闭虚拟内存</li><li>关机，压缩磁盘，进行快照</li></ul><h2 id="关闭防火墙和实时保护">关闭防火墙和实时保护</h2><ul><li>win+r <code>gpedit.msc</code></li><li><code>计算机配置-&gt;管理模板-&gt;Windows组件-&gt;Microsoft Defender防病毒</code></li><li>在右侧窗格中双击 <code>关闭Microsoft Defender防病毒选项</code></li><li><code>Windows组件-&gt;Microsoft Defender防病毒-&gt;实时保护</code></li><li>在右侧窗格中双击 <code>关闭实时保护</code></li><li><code>设置-&gt;安全中心-&gt;防火墙网络保护</code>，关闭域、专用、公用三项防火墙</li><li>关机，进行快照</li></ul><h2 id="关闭加密">关闭加密</h2><ul><li>管理员运行 <code>manage-bde -status</code>，确认完全解密</li></ul><h2 id="激活-可选">激活(可选)</h2><ul><li><code>irm https://get.activated.win | iex</code></li></ul><h2 id="锚定时间-可选">锚定时间(可选)</h2><ul><li>修改<code>虚拟机设置-选项-VMware Tools</code>关闭时间同步</li><li>修改 <code>.vmx</code> 文件，按下面的配置锚定时间</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vmx">tools.syncTime = &quot;FALSE&quot;<br>time.synchronize.continue = &quot;FALSE&quot;<br>time.synchronize.restore = &quot;FALSE&quot;<br>time.synchronize.resume.disk = &quot;FALSE&quot;<br>time.synchronize.shrink = &quot;FALSE&quot;<br>time.synchronize.tools.startup = &quot;FALSE&quot;<br>rtc.startTime = 1733011200 <br></code></pre></td></tr></table></figure><h2 id="驱动-可选">驱动(可选)</h2><ul><li>对系统进行快照</li><li>驱动大师更新全部驱动，备份驱动到U盘</li><li><code>dism /online /export-driver /destination:D:\Drivers</code></li><li>还原到上一次快照</li><li>在设备管理器里安装离线的驱动</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/win/">win</category>
      
      
      <comments>https://hexo.limour.top/install-win11-iot-ltsc#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】ServiceWorker实现前端资源高可用</title>
      <link>https://hexo.limour.top/service-worker-resource-high-availability</link>
      <guid>https://hexo.limour.top/service-worker-resource-high-availability</guid>
      <pubDate>Thu, 20 Feb 2025 07:46:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;JsDelivr 被墙后博客主题换用了国内的CDN，现在想让博客能根据连通性的不同，自动选择最快的 CDN 服务。搜索了一下，有一个 &lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyR</description>
        
      
      
      
      <content:encoded><![CDATA[<p>JsDelivr 被墙后博客主题换用了国内的CDN，现在想让博客能根据连通性的不同，自动选择最快的 CDN 服务。搜索了一下，有一个 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyRHJlYW0vZnJlZWNkbg==" rel="noopener external nofollow noreferrer">freecdn</a> 项目，使用 Service Worker 来反代 CDN 链接，但写得太复杂了，小博客只想要个简单的，因此依葫芦画瓢，简单改造了一下主题。<br>目前博客首次打开时会自动测试最快返回的 CDN，使用其作为默认的 CDN；这也带来了额外的好处，失效的 CDN 会被自动切换到其他可用的 CDN。相比<a href="https://hexo.limour.top/go/#aHR0cHM6Ly9zb3VsdGVhcnkuY29tLzIwMTkvMDUvMTQvc2ltcGxlLXBvbGljaWVzLW1ha2UtZnJvbnQtZW5kLXJlc291cmNlcy1oaWdobHktYXZhaWxhYmxlLmh0bWw=" rel="noopener external nofollow noreferrer">简单策略让前端资源实现高可用</a>，Service Worker 方案可以透明接入，无需额外修改。</p><h2 id="引入-sw-js">引入 sw.js</h2><ul><li>编辑 HEXO 项目的 <code>/scripts</code> 目录，新建 <code>CDN.js</code>，内容如下</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// freecdn</span><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;head_begin&#x27;</span>, <span class="hljs-string">`</span><br><span class="hljs-string">&lt;script&gt;</span><br><span class="hljs-string">const sw = navigator.serviceWorker;</span><br><span class="hljs-string">sw.ready.then(() =&gt; &#123;if(!sw.controller)&#123;location.reload();&#125;&#125;);</span><br><span class="hljs-string">sw.register(&#x27;/sw.js&#x27;, &#123;scope: &#x27;/&#x27;&#125;);</span><br><span class="hljs-string">&lt;/script&gt;</span><br><span class="hljs-string">`</span>);<br></code></pre></td></tr></table></figure><ul><li><code>head_begin</code> 会将 <code>&lt;script&gt;</code> 插入到页面 <code>&lt;head&gt;</code> 后的第一行，确保第一时间加载 <code>sw.js</code></li><li>注意作用域 <code>scope</code>，必须为 <code>/</code>，这个不仅代表请求的地址，也代表发出的请求页面</li><li><code>/sw.js</code> 必须位于 <code>scope</code> 的同级目录，不能是子目录；全站需要开启 <code>https</code></li></ul><h2 id="创建-sw-js">创建 sw.js</h2><ul><li>编辑 HEXO 项目的 <code>/source</code> 目录，新建 <code>sw.js</code>，内容如下</li></ul>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-dcdac752" role="button" aria-expanded="false" aria-controls="collapse-dcdac752">        <div class="fold-arrow">▶</div>点开查看折叠的代码      </div>      <div class="fold-collapse collapse" id="collapse-dcdac752">        <div class="fold-content">          <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> cdn_regex = <span class="hljs-regexp">/.*\/cdn\/(.+?)\//</span>;<br><span class="hljs-keyword">const</span> cdn_list = &#123;<br><span class="hljs-string">&quot;anchor-js&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/anchor-js@4.3.1/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/anchor-js@4.3.1/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/anchor-js/5.0.0/&quot;</span>,<br>],<br><span class="hljs-string">&quot;github-markdown-css&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/github-markdown-css@4.0.0/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/github-markdown-css@4.0.0/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/github-markdown-css/4.0.0/&quot;</span>,<br>],<br><span class="hljs-string">&quot;jquery&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/jquery@3.6.4/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/jquery@3.6.4/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/jquery/3.6.4/&quot;</span>,<br>],<br><span class="hljs-string">&quot;bootstrap&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/bootstrap@4.6.1/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/bootstrap@4.6.1/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/twitter-bootstrap/4.6.1/&quot;</span>,<br>],<br><span class="hljs-string">&quot;tocbot&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/tocbot@4.20.1/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/tocbot@4.20.1/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/tocbot/4.20.1/&quot;</span>,<br>],<br><span class="hljs-string">&quot;nprogress&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/nprogress@0.2.0/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/nprogress@0.2.0/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/nprogress/0.2.0/&quot;</span>,<br>],<br><span class="hljs-string">&quot;katex&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/katex@0.16.21/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/katex@0.16.21/dist/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/KaTeX/0.16.2/&quot;</span>,<br>],<br><span class="hljs-string">&quot;clipboard-js&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/clipboard-js@0.3.6/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/clipboard-js@0.3.6/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/clipboard.js/2.0.11/&quot;</span>,<br>],<br><span class="hljs-string">&quot;hint.css&quot;</span>: [<br><span class="hljs-string">&quot;https://cdn1/npm/hint.css@2.7.0/&quot;</span>,<br><span class="hljs-string">&quot;https://cdn2/npm/hint.css@2.7.0/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/hint.css/2.7.0/&quot;</span>,<br>]<br>&#125;;<br><span class="hljs-keyword">const</span> cdn_index = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getFastestUrl</span>(<span class="hljs-params">urls</span>) &#123;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">testUrl</span> = (<span class="hljs-params">one</span>) =&gt; &#123;<br><span class="hljs-keyword">const</span> url = one[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">const</span> id = one[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">const</span> startTime = performance.<span class="hljs-title function_">now</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">fetch</span>(url, &#123;<span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-attr">cache</span>: <span class="hljs-string">&#x27;no-cache&#x27;</span>&#125;)<br>.<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-keyword">return</span> &#123;url, id, <span class="hljs-attr">time</span>: performance.<span class="hljs-title function_">now</span>() - startTime&#125;;<br>&#125;)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">() =&gt;</span> &#123;&#125;));<br>&#125;<br><span class="hljs-keyword">const</span> promises = urls.<span class="hljs-title function_">map</span>(testUrl);<br><span class="hljs-keyword">const</span> fastest = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">race</span>(promises);<br><span class="hljs-keyword">return</span> fastest;<br>&#125;<br><span class="hljs-keyword">const</span> urls = [<br>[<span class="hljs-string">&#x27;https://cdn2/npm/anchor-js@4.3.1/anchor.min.js&#x27;</span>, <span class="hljs-number">1</span>],<br>[<span class="hljs-string">&#x27;https://cdn1/npm/anchor-js@4.3.1/anchor.min.js&#x27;</span>, <span class="hljs-number">0</span>],<br>[<span class="hljs-string">&#x27;https://lib.baomitu.com/anchor-js/5.0.0/anchor.min.js&#x27;</span>, <span class="hljs-number">2</span>]<br>];<br>    <span class="hljs-title function_">getFastestUrl</span>(urls).<span class="hljs-title function_">then</span>( <span class="hljs-function">(<span class="hljs-params">fastest</span>) =&gt;</span> &#123;<br>        caches.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;freecdn.limour&#x27;</span>).<span class="hljs-title function_">then</span>( <span class="hljs-function">(<span class="hljs-params">cache</span>) =&gt;</span> &#123;<br>            <span class="hljs-title function_">resolve</span>(fastest.<span class="hljs-property">id</span>);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;最快的 URL:&#x27;</span>, fastest);<br>        &#125;);<br>    &#125;);<br>&#125;);<br><br>oninstall = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;self.<span class="hljs-title function_">skipWaiting</span>();&#125;;<br><br>onactivate = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>e.<span class="hljs-title function_">waitUntil</span>(clients.<span class="hljs-title function_">claim</span>());<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cdn_list);<br>&#125;;<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">cdn_redirect</span>(<span class="hljs-params">url, resolve</span>) &#123;<br><span class="hljs-keyword">const</span> key = url.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">match</span>(cdn_regex)[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">const</span> newUrl = url.<span class="hljs-property">href</span>.<span class="hljs-title function_">replace</span>(cdn_regex, cdn_list[key][<span class="hljs-keyword">await</span> cdn_index]);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newUrl);<br><span class="hljs-title function_">resolve</span>(<span class="hljs-title class_">Response</span>.<span class="hljs-title function_">redirect</span>(newUrl, <span class="hljs-number">301</span>));<br>&#125;<br><br>onfetch = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> url = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(e.<span class="hljs-property">request</span>.<span class="hljs-property">url</span>);<br>    <span class="hljs-keyword">if</span> (cdn_regex.<span class="hljs-title function_">test</span>(url.<span class="hljs-property">pathname</span>)) &#123;<br>        e.<span class="hljs-title function_">respondWith</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>( <span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>            <span class="hljs-title function_">cdn_redirect</span>(url, resolve)<br>        &#125;<br>        ))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><ul><li>请将 <code>cdn1</code> 和 <code>cdn2</code> 替换为合适的 CDN，比如 <code>fastly.jsdelivr.net</code> 或 <code>gcore.jsdelivr.net</code></li></ul><h2 id="修改博客资源地址">修改博客资源地址</h2><ul><li>修改 <code>_config.fluid.yml</code> 中的 <code>static_prefix</code></li><li>将资源地址改为 <code>/cdn/&lt;key&gt;/</code></li></ul><h2 id="更新博客">更新博客</h2><ul><li>完成以上操作后，正常生成并部署博客。</li></ul><h2 id="附加-butterfly-主题">附加 butterfly 主题</h2><ul><li>引入 <code>sw.js</code> 不变</li><li><code>sw.js</code> 修改 <code>cdn_list</code> 如下</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> cdn_list = &#123;<br><span class="hljs-string">&quot;custom&quot;</span>: [<br><span class="hljs-string">&quot;https://s4.zstatic.net/ajax/libs/&quot;</span>,<br><span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/&quot;</span>,<br><span class="hljs-string">&quot;https://lib.baomitu.com/&quot;</span>,<br><span class="hljs-string">&quot;https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/&quot;</span>,<br>],<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>sw.js</code> 修改 <code>urls</code> 如下</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> urls = [<br>[<span class="hljs-string">&#x27;https://s4.zstatic.net/ajax/libs/anchor-js/5.0.0/anchor.min.js&#x27;</span>, <span class="hljs-number">0</span>],<br>[<span class="hljs-string">&#x27;https://cdnjs.cloudflare.com/ajax/libs/anchor-js/5.0.0/anchor.min.js&#x27;</span>, <span class="hljs-number">1</span>],<br>[<span class="hljs-string">&#x27;https://lib.baomitu.com/anchor-js/5.0.0/anchor.min.js&#x27;</span>, <span class="hljs-number">2</span>],<br>[<span class="hljs-string">&#x27;https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/anchor-js/5.0.0/anchor.min.js&#x27;</span>, <span class="hljs-number">3</span>]<br>];<br></code></pre></td></tr></table></figure><ul><li>修改 butterfly 的配置文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">CDN:</span><br>  <span class="hljs-attr">internal_provider:</span> <span class="hljs-string">local</span><br>  <span class="hljs-attr">third_party_provider:</span> <span class="hljs-string">custom</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">custom_format:</span> <span class="hljs-string">/cdn/custom/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;min_cdnjs_file&#125;</span><br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/hexo/">hexo</category>
      
      
      <comments>https://hexo.limour.top/service-worker-resource-high-availability#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】打包便携版Python</title>
      <link>https://hexo.limour.top/portable-python-package</link>
      <guid>https://hexo.limour.top/portable-python-package</guid>
      <pubDate>Fri, 17 Jan 2025 01:40:21 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;内网电脑是 win7，且不想改变电脑的环境设置，因此打包一个便携版的 Python 来自用。&lt;/p&gt;
&lt;h2 id=&quot;准备文件&quot;&gt;准备文件&lt;/h2&gt;
&lt;p&gt;从 &lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM6Ly93d3cucHl0</description>
        
      
      
      
      <content:encoded><![CDATA[<p>内网电脑是 win7，且不想改变电脑的环境设置，因此打包一个便携版的 Python 来自用。</p><h2 id="准备文件">准备文件</h2><p>从 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMvcmVsZWFzZS9weXRob24tMzgxMC8=" rel="noopener external nofollow noreferrer">python-3810</a> 下载最后支持 win7 的编译好的文件</p><ul><li>python-3.8.10-amd64.exe</li><li>python-3.8.10-embed-amd64.zip</li></ul><h2 id="KB2533623-更新">KB2533623 更新</h2><ul><li>安装 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9kb3dubG9hZC9kZXRhaWxzLmFzcHg/aWQ9NDc0NDI=" rel="noopener external nofollow noreferrer">KB3063858</a></li><li>重启 win7 虚拟机，再运行 python-3.8.10-amd64.exe</li><li>取消勾选 <code>install launcher</code>， 从 <code>Custmoize installation</code>  继续</li><li>只勾选 <code>pip</code> 和 <code>tcl/tk</code>，取消其他所有勾选，继续</li><li>选一个临时目录A，取消所有勾选，再勾上<code>Precompile standard lib</code>，继续</li></ul><h2 id="pip-安装需要的包">pip 安装需要的包</h2><ul><li>打开目录A的 Scripts 文件夹，地址栏输入 cmd</li><li><code>pip install httpx lxml -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple</code></li><li>安装完成后测试安装的包正常运行</li></ul><h2 id="构造便携版">构造便携版</h2><ul><li>将 <code>Lib/site-packages</code> 移动到目录A内，重命名为 <code>mods</code></li><li>将 <code>Lib/tkinter</code> 移动到 <code>mods</code> 目录内</li><li>将 python-3.8.10-embed-amd64.zip 中的 python38.zip 放到目录A内</li><li>目录A内创建名为 <code>python38._pth</code> 的文本文件，其内容如下</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">DLLs<br>python38.zip<br>.<br>site-packages.zip<br>mods<br></code></pre></td></tr></table></figure><ul><li>移除 <code>Lib、libs、include、Scripts、Tools</code> 等文件夹，</li><li>只保留 <code>DLLs</code>、<code>mods</code>、<code>tcl</code> 这三个文件夹，同时创建 <code>site-packages.zip</code> 文件</li><li>进入 <code>mods</code> 文件夹，删除不必须的包，然后将包一个一个移入 <code>site-packages.zip</code></li><li>每移动一个测试安装的包是否正常运行，不能则保留在 <code>mods</code> 文件夹</li><li>直到所有包都测试完毕，此时碎片文件数量达到最优</li></ul><h2 id="测试便携版">测试便携版</h2><ul><li>将目录A打包成 python-3.8.10-amd64.zip</li><li>将虚拟机回滚到初始快照，安装 KB3063858 更新后重启</li><li>解压 python-3.8.10-amd64.zip，测试是否可用</li></ul><h2 id="附加-改用-PyQt-的版本">附加 改用 PyQt 的版本</h2><ul><li><a href="https://od.limour.top/archives/dist/python">PyStand-py38-pyqt5-lite.zip</a></li><li>后续添加包 <code>conda create -n temp conda-forge::python=3.8.10 conda-forge::beautifulsoup4</code></li><li>然后进 <code>%userprofile%\miniconda3\envs\temp\Lib\site-packages</code> 复制对应的包到 <code>mods</code> 目录下</li><li>如果缺失了 <code>api-ms</code> 相关的 DLL，可以去 <code>Python-Win7-X64_httpx.zip</code> 中复制补全</li></ul><h2 id="打包好的成品">打包好的成品</h2><ul><li><a href="https://od.limour.top/archives/dist/python">Python-Win7-X64_httpx.zip</a></li><li>该成品可以在重装后只安装了 KB3063858 一个更新的 Win7 系统中无依赖运行</li><li>同时可以使用 <code>tkinter</code>、<code>httpx</code> 和 <code>lxml</code> 这三个模块和所有python内置的模块</li><li>配合 <a href="https://od.limour.top/archives/dist/chrome">Chrome-Win7-X64.zip</a> 便携版，可以方便内网抓包写小脚本。</li></ul><h2 id="附加-kivy">附加 kivy</h2><ul><li>安卓：<a href="https://od.limour.top/archives/dist/python">launcher-arm64-v8a-debug.apk</a></li><li>Win：<a href="https://od.limour.top/archives/dist/python">launcher-x64-windows.zip</a></li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/windows/">Windows</category>
      
      
      <comments>https://hexo.limour.top/portable-python-package#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】重装系统后的操作</title>
      <link>https://hexo.limour.top/operation-after-reinstalling-the-system</link>
      <guid>https://hexo.limour.top/operation-after-reinstalling-the-system</guid>
      <pubDate>Mon, 30 Dec 2024 16:54:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;用了几年，笔记本系统又该重置了，每次重置后都要做一大堆操作，这里记录一下，方便以后参考。&lt;/p&gt;
&lt;h2 id=&quot;激活系统&quot;&gt;激活系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenWrt 开启 KMS 插件&lt;/li&gt;
&lt;li&gt;新系统以管理员权限执行下面的命令&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>用了几年，笔记本系统又该重置了，每次重置后都要做一大堆操作，这里记录一下，方便以后参考。</p><h2 id="激活系统">激活系统</h2><ul><li>OpenWrt 开启 KMS 插件</li><li>新系统以管理员权限执行下面的命令</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">slmgr /upk<br>slmgr /ipk W269N<span class="hljs-literal">-WFGWX-YVC9B-4J6C9-T83GX</span><br>slmgr /skms <span class="hljs-number">192.168</span>.<span class="hljs-number">88.1</span><br>slmgr /ato<br><span class="hljs-built_in">set-executionpolicy</span> remotesigned<br></code></pre></td></tr></table></figure><ul><li>重复检查 <code>Windows 更新</code> 安装重启，直到不再有新的更新</li></ul><h2 id="系统优化">系统优化</h2><ul><li>关闭虚拟内存：<code>高级系统设置-性能-高级-虚拟内存</code> 修改为无</li><li><a href="./resolve-the-power-consumption-issue-of-windows-laptop-shutdown">解决关机耗电问题</a></li></ul><h2 id="基础软件">基础软件</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2NsYXNoLXZlcmdlLXJldi9jbGFzaC12ZXJnZS1yZXYvcmVsZWFzZXM=" rel="noopener external nofollow noreferrer">基础上网工具</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL25vdGVwYWQtcGx1cy1wbHVzL25vdGVwYWQtcGx1cy1wbHVz" rel="noopener external nofollow noreferrer">notepad++</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9hcHBzLm1pY3Jvc29mdC5jb20vZGV0YWlsLzlwMXd4cGtiNjhreA==" rel="noopener external nofollow noreferrer">Snipaste</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cuNy16aXAub3JnLw==" rel="noopener external nofollow noreferrer">7zip</a></li><li>将常用软件的安装目录添加的 <code>Windows 安全中心</code> 的排除项里，以免影响性能</li></ul><h2 id="恢复博客">恢复博客</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHMvd2lu" rel="noopener external nofollow noreferrer">git</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v" rel="noopener external nofollow noreferrer">VS Code</a></li><li><a href="./-ji-lu--an-zhuang-conda-bing-geng-huan-qing-hua-yuan">conda</a></li><li>在 <code>Anaconda Prompt</code> 中执行 <code>conda init</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell">git config <span class="hljs-literal">--global</span> user.name <span class="hljs-string">&quot;Limour&quot;</span><br>git config <span class="hljs-literal">--global</span> user.email <span class="hljs-string">&quot;limour@limour.top&quot;</span><br>git clone <span class="hljs-literal">-b</span> main <span class="hljs-literal">--single-branch</span> https://github.com/limour<span class="hljs-literal">-blog</span>/limour<span class="hljs-literal">-blog</span>.github.io.git<br><span class="hljs-comment"># 在 VS Code 中 打开 limour-blog.github.io 文件夹</span><br>conda create <span class="hljs-literal">-n</span> node conda<span class="hljs-literal">-forge</span>::nodejs<br>conda activate node<br>npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com<br>npm i hexo<span class="hljs-literal">-cli</span> <span class="hljs-literal">-g</span><br>npm install<br></code></pre></td></tr></table></figure><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9pbWFnZW1hZ2ljay5vcmcvc2NyaXB0L2Rvd25sb2FkLnBocA==" rel="noopener external nofollow noreferrer">imagemagick</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvUXVpY2tlcg==" rel="noopener external nofollow noreferrer">Quicker</a></li></ul><h2 id="安装微信">安装微信</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3NhbmRib3hpZS1wbHVzL1NhbmRib3hpZS9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">sandboxie</a>，安装驱动时需要临时关闭实时防护</li><li><code>右键沙盒-沙盒设置-恢复</code> 移除 <code>快速恢复</code> 中的文件夹，关闭 <code>直接恢复</code> 中的启用</li><li><code>沙盒设置-资源访问-文件访问-阻止访问</code> 添加沙盒目录和 <code>OneDrive</code> 目录</li><li>下载微信安装包，右键在沙箱中运行，勾上 UAC 管理员权限，安装完毕后登录一次再退出</li><li><code>文件访问-阻止访问</code> 添加 <code>C:\Sandbox\</code> 目录</li><li><code>配置-系统设置-添加快捷方式图标</code> 勾上 UAC ，在程序里选择微信，此后可以从桌面的快捷方式启动沙盒内的微信</li><li><code>文件访问-只写访问</code> 添加 <code>%AppData%\</code> 和 <code>%Local AppData%\</code> 目录</li><li><code>沙盒设置-限制-降低权限</code> 勾上 <code>降低管理员和超级用户组的权限</code></li></ul><h2 id="笔记管理">笔记管理</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3N1bWF0cmFwZGZyZWFkZXIvc3VtYXRyYXBkZi9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">sumatrapdf</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cuem90ZXJvLm9yZy8=" rel="noopener external nofollow noreferrer">zotero</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2wwbzAvdGFyYQ==" rel="noopener external nofollow noreferrer">Tara</a> 插件，导入之前导出的备份</li></ul><h2 id="恢复虚拟机">恢复虚拟机</h2><ul><li>去博通官网下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy9kZXNrdG9wLWh5cGVydmlzb3Ivd29ya3N0YXRpb24tYW5kLWZ1c2lvbg==" rel="noopener external nofollow noreferrer">VMware</a></li><li>直接恢复之前备份的整个虚拟机，之后所有操作都靠虚拟机快照进行，摆脱重装烦恼</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/win/">win</category>
      
      
      <comments>https://hexo.limour.top/operation-after-reinstalling-the-system#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】将旧手机变成云手机</title>
      <link>https://hexo.limour.top/convert-old-phone-to-cloud-phone</link>
      <guid>https://hexo.limour.top/convert-old-phone-to-cloud-phone</guid>
      <pubDate>Wed, 25 Dec 2024 13:04:41 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;./force-enable-adb-wireless-debugging&quot;&gt;ADB 调试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;scrcpy-方案&quot;&gt;scrcpy 方案&lt;/h2&gt;
&lt;ul</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="准备工作">准备工作</h2><ul><li><a href="./force-enable-adb-wireless-debugging">ADB 调试</a></li></ul><h2 id="scrcpy-方案">scrcpy 方案</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0dlbnltb2JpbGUvc2NyY3B5L3JlbGVhc2Vz" rel="noopener external nofollow noreferrer">scrcpy</a></li><li>也可以<a href="./WebSocket-based-intranet-penetration-tool">内网穿透</a>，那么修改下面的 IP 和端口为穿透后的 IP 和端口</li><li>使用 <code>scrcpy</code> 目录下的 adb 执行 <code>.\adb.exe connect 192.168.110.105:35555</code></li><li>执行 <code>.\scrcpy.exe --new-display --no-vd-destroy-content</code></li></ul><p><img src="https://img.limour.top/2024/12/25/676c0984bff5f.webp" alt=""></p><ul><li>修改 <code>scrcpy-console.bat</code> 如下，则可关闭物理屏幕</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">@<span class="hljs-built_in">echo</span> off<br>scrcpy --turn-screen-off --new-display --no-vd-destroy-content --<span class="hljs-built_in">pause</span>-on-<span class="hljs-keyword">exit</span>=<span class="hljs-keyword">if</span>-error %*<br></code></pre></td></tr></table></figure><h3 id="私密远程访问">私密远程访问</h3><ul><li><a href="./-ji-lu--an-zhuang-npsfrp-fu-wu-duan-yu-ke-hu-duan">部署 nps 服务端</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3lpc2llci9ucHMvcmVsZWFzZXM=" rel="noopener external nofollow noreferrer">npc</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2dvLWdvc3QvZ29zdC9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">gost</a></li><li>nps 服务端新增客户端，记录 ip 和 vkey</li><li>电脑执行以下命令使手机连接到服务器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">adb disconnect<br>adb connect <span class="hljs-number">192.168</span>.<span class="hljs-number">110.50</span>:<span class="hljs-number">35555</span> <span class="hljs-comment"># 手机的内网 ip</span><br><br>adb shell<br>mkdir <span class="hljs-literal">-p</span> /sdcard/npc<br><span class="hljs-built_in">cat</span> &gt; /sdcard/npc/run_npc.sh &lt;&lt;EOF<br><span class="hljs-comment">#!/data/data/com.termux/files/usr/bin/bash</span><br>npc <span class="hljs-literal">-server</span>=&lt;ip&gt;:<span class="hljs-number">8025</span> <span class="hljs-literal">-vkey</span>=&lt;vkey&gt; <span class="hljs-literal">-tls_enable</span>=true<br>EOF<br><br>adb push <span class="hljs-string">&quot;G:\apk\work\npc&quot;</span> /sdcard/npc<br></code></pre></td></tr></table></figure><ul><li>手机 Termux 执行以下命令启动客户端</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> storage/shared/npc/npc /data/data/com.termux/files/usr/bin/<br><span class="hljs-built_in">chmod</span> +x /data/data/com.termux/files/usr/bin/npc<br><span class="hljs-built_in">mv</span> storage/shared/npc/run_npc.sh .  <span class="hljs-comment"># 有个点，表示当前目录</span><br><span class="hljs-built_in">chmod</span> +x run_npc.sh<br>./run_npc.sh<br></code></pre></td></tr></table></figure><ul><li>nps 服务端新增TCP隧道，记录端口，比如 <code>40992</code></li><li>电脑执行以下命令建立测试用私密连接</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">.\gost.exe <span class="hljs-literal">-L</span>=<span class="hljs-string">&quot;tcp://:3554/nps:40992&quot;</span> <span class="hljs-operator">-F</span>=<span class="hljs-string">&quot;ss://chacha20-ietf-poly1305:password@nps.blog.com:8337&quot;</span><br></code></pre></td></tr></table></figure><ul><li>电脑执行以下命令连接手机</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">adb disconnect<br>adb connect <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">3554</span><br>adb devices<br></code></pre></td></tr></table></figure><ul><li>确认成功，则关闭测试用私密连接</li><li>修改 <code>scrcpy-console.bat</code> 如下</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmd">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">start</span> &quot;scrcpy-gost&quot; <span class="hljs-built_in">cmd</span> /c gost -L=&quot;tcp://:<span class="hljs-number">3554</span>/nps:<span class="hljs-number">40992</span>&quot; -F=&quot;ss://chacha20-ietf-poly1305:password@nps.blog.com:<span class="hljs-number">8337</span>&quot;<br>timeout /t <span class="hljs-number">3</span> /nobreak &gt;<span class="hljs-built_in">nul</span><br>adb disconnect<br>adb connect <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">3554</span><br>scrcpy -Sw -m <span class="hljs-number">1024</span> -b <span class="hljs-number">3</span>M --max-fps=<span class="hljs-number">6</span> --<span class="hljs-built_in">pause</span>-on-<span class="hljs-keyword">exit</span>=<span class="hljs-keyword">if</span>-error %*<br></code></pre></td></tr></table></figure><h3 id="安卓访问">安卓访问</h3><ul><li>主力手机安装 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9kYXRhc2V0cy9MaW1vdXIvYXJjaHZpZS9ibG9iL21haW4vc2NyY3B5LWFuZHJvaWQuYXBr" rel="noopener external nofollow noreferrer">scrcpy-android</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvRGlzcGxheVRvZ2dsZS9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">DisplayToggle.dex</a></li><li>电脑执行以下命令测试前台熄屏功能</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">adb push &quot;C:\Users\limou\Downloads\DisplayToggle.dex&quot; /sdcard/DisplayToggle.dex<br>adb shell CLASSPATH=/sdcard/DisplayToggle.dex app_process / DisplayToggle <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li>手机 Termux 执行以下命令开启前台熄屏功能</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cat</span> &gt; /data/data/<span class="hljs-keyword">com</span>.termux/<span class="hljs-keyword">files</span>/usr/bin/<span class="hljs-keyword">display</span>.<span class="hljs-keyword">sh</span> &lt;&lt;EOF<br>#!/data/data/<span class="hljs-keyword">com</span>.termux/<span class="hljs-keyword">files</span>/usr/bin/bash<br>rish -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;CLASSPATH=/sdcard/DisplayToggle.dex app_process / DisplayToggle 0&quot;</span><br>EOF<br>chmod +<span class="hljs-keyword">x</span> /data/data/<span class="hljs-keyword">com</span>.termux/<span class="hljs-keyword">files</span>/usr/bin/<span class="hljs-keyword">display</span>.<span class="hljs-keyword">sh</span><br><span class="hljs-keyword">display</span>.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><ul><li>之后主力手机通过 scrcpy-android 连接到旧手机后，termux 执行 <code>display.sh</code> 即可熄屏</li></ul><h2 id="Droidvnc-方案">Droidvnc 方案</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2JrMTM4L2Ryb2lkVk5DLU5HL3JlbGVhc2Vz" rel="noopener external nofollow noreferrer">droidvnc-ng</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb install -t <span class="hljs-string">&#x27;droidvnc-ng-2.8.0.apk&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>关闭 <code>droidvnc-ng</code> 电池优化，并在自启动里手动管理允许所有启动方式</li><li><code>PackageViewer</code> 获取 <code>droidvnc-ng</code> 的包名为 <code>net.christianbeier.droidvnc_ng</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看 droidvnc_ng 的所有服务，自行判断哪个是无障碍服务</span><br><span class="hljs-comment"># 比如 `net.christianbeier.droidvnc_ng/.InputService`</span><br><span class="hljs-comment"># 一般是有 `android.permission.BIND_ACCESSIBILITY_SERVICE` 权限的那个</span><br>adb shell dumpsys activity services net.christianbeier.droidvnc_ng<br><span class="hljs-comment"># 或者手动开启一次无障碍服务，然后直接找到对应的服务</span><br><span class="hljs-comment"># 比如 `net.christianbeier.droidvnc_ng/net.christianbeier.droidvnc_ng.InputService`</span><br>adb shell settings get secure enabled_accessibility_services<br><span class="hljs-comment"># 执行下面的命令进行保活</span><br>adb shell pm grant net.christianbeier.droidvnc_ng/net.christianbeier.droidvnc_ng.InputService android.permission.BIND_ACCESSIBILITY_SERVICE<br>adb shell pm grant net.christianbeier.droidvnc_ng/net.christianbeier.droidvnc_ng.InputService android.permission.WRITE_SECURE_SETTINGS<br>adb shell settings put secure enabled_accessibility_services net.christianbeier.droidvnc_ng/net.christianbeier.droidvnc_ng.InputService<br><span class="hljs-comment"># 验证无障碍服务打开情况</span><br>adb shell settings get secure enabled_accessibility_services<br></code></pre></td></tr></table></figure><ul><li>浏览器访问 <code>http://192.168.110.105:5800/vnc.html?autoconnect=true&amp;autoscale=1&amp;show_dot=true&amp;port=5900</code> 即可</li><li>内网穿透后可远程使用</li></ul><h2 id="附加-变NAS">附加 变NAS</h2><ul><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2ppbmczMzIvQUxpc3RGbHV0dGVyL3JlbGVhc2Vz" rel="noopener external nofollow noreferrer">AListFlutter</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2RldmdpYW5sdS9BcmlhMkFuZHJvaWQvcmVsZWFzZXM=" rel="noopener external nofollow noreferrer">Aria2Android</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWNvbS5sb25lbHljYXRnYW1lcy5YcGxvcmU=" rel="noopener external nofollow noreferrer">X-plore</a></li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/novnc/">novnc</category>
      
      
      <comments>https://hexo.limour.top/convert-old-phone-to-cloud-phone#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】强行开启 ADB 的无线调试功能</title>
      <link>https://hexo.limour.top/force-enable-adb-wireless-debugging</link>
      <guid>https://hexo.limour.top/force-enable-adb-wireless-debugging</guid>
      <pubDate>Wed, 25 Dec 2024 11:44:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;某无法 root 的X之光手机阉割了无线调试功能，因此只能曲线救国，尝试通过其他方法开启无线调试功能。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下载 &lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM6</description>
        
      
      
      
      <content:encoded><![CDATA[<p>某无法 root 的X之光手机阉割了无线调试功能，因此只能曲线救国，尝试通过其他方法开启无线调试功能。</p><h2 id="准备工作">准备工作</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdG9vbHMvcmVsZWFzZXMvcGxhdGZvcm0tdG9vbHM=" rel="noopener external nofollow noreferrer">ADB</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL1Jpa2thQXBwcy9TaGl6dWt1L3JlbGVhc2Vz" rel="noopener external nofollow noreferrer">Shizuku</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3Rlcm11eC90ZXJtdXgtYXBw" rel="noopener external nofollow noreferrer">Termux</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL01hWWlGZWkxOTk1L1BhY2thZ2VWaWV3ZXIvcmVsZWFzZXM=" rel="noopener external nofollow noreferrer">PackageViewer</a></li></ul><h2 id="安装-Shizuku">安装 Shizuku</h2><ul><li>开启 USB 调试，并允许仅充电时调试</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs powershell">adb devices<br>.\adb.exe install <span class="hljs-literal">-t</span> <span class="hljs-string">&#x27;.\termux.apk&#x27;</span><br>.\adb.exe install <span class="hljs-literal">-t</span> <span class="hljs-string">&#x27;.\shizuku.apk&#x27;</span><br>.\adb.exe install <span class="hljs-literal">-t</span> <span class="hljs-string">&#x27;.\packageviewer.apk&#x27;</span><br><br>adb shell<br>sh /storage/emulated/<span class="hljs-number">0</span>/Android/<span class="hljs-keyword">data</span>/moe.shizuku.privileged.api/start.sh<br></code></pre></td></tr></table></figure><ul><li>关闭 <code>termux</code> 和 <code>Shizuku</code> 的电池优化，并在自启动里手动管理允许所有启动方式</li><li>在 <code>Shizuku-在终端应用中使用Shizuku</code> 中导出 <code>rish</code> 文件到 <code>termux</code></li><li>在  <code>termux</code> 中运行下列命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg up <br>pkg install nmap android-tools<br>termux-setup-storage<br>termux-wake-lock<br><br>sed -i <span class="hljs-string">&#x27;s/ID=&quot;PKG&quot;/ID=&quot;com.termux&quot;/&#x27;</span> rish<br><span class="hljs-built_in">chmod</span> +x rish<br><span class="hljs-built_in">mv</span> rish ~/../usr/bin/<br><span class="hljs-built_in">mv</span> rish_shizuku.dex ~/../usr/bin/<br></code></pre></td></tr></table></figure><ul><li>在 <code>termux</code> 中运行 <code>rish</code> 进入<code>adb shell</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs adb">pm grant com.termux android.permission.WRITE_SECURE_SETTINGS<br></code></pre></td></tr></table></figure><h2 id="开启无线调试">开启无线调试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs adb">getprop service.adb.tcp.port<br># 为空说明没有开启无线调试<br>setprop service.adb.tcp.port 35555<br># 开启无线调试到 tcp 35555 端口<br></code></pre></td></tr></table></figure><ul><li>此时并没有生效，去开发者里关闭ADB并重新打开</li><li>然后会发现 <code>Shizuku</code> 的 ADB 掉了，但是没有关系</li><li>重新到 <code>Shizuku</code> 界面会发现多了一个通过无线调试启动的选项</li><li>点击启动，然后允许调试即可恢复 <code>Shizuku</code> 的 ADB</li></ul><h2 id="后台保活">后台保活</h2><ul><li>需要安卓版本为 12 12L 13 之一</li><li>将下面的脚本保存为 <code>AcBat.sh</code>，放到 <code>Download</code> 目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#!sh</span><br><br><span class="hljs-comment"># 定义颜色</span><br>RED=<span class="hljs-string">&#x27;\033[31m&#x27;</span><br>GREEN=<span class="hljs-string">&#x27;\033[32m&#x27;</span><br>YELLOW=<span class="hljs-string">&#x27;\033[33m&#x27;</span><br>BLUE=<span class="hljs-string">&#x27;\033[34m&#x27;</span><br>NC=<span class="hljs-string">&#x27;\033[0m&#x27;</span> <span class="hljs-comment"># No Color</span><br><br><span class="hljs-comment"># 检测 Android 版本</span><br><span class="hljs-function"><span class="hljs-title">get_android_version</span></span>() &#123;<br>  <span class="hljs-built_in">local</span> version=$(getprop ro.build.version.release)<br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$version</span><br>&#125;<br><br><span class="hljs-comment"># 检测是否有 GMS</span><br><span class="hljs-function"><span class="hljs-title">has_gms</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;[ -d &quot;/system/priv-app/GoogleServicesFramework&quot; ] || [ -d &quot;/system/app/GoogleServicesFramework&quot; ]&#x27;</span>; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">return</span> 0<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">return</span> 1<br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># 激活函数</span><br><span class="hljs-function"><span class="hljs-title">activate</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GREEN&#125;</span>激活中...<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>  <span class="hljs-built_in">local</span> android_version=$(get_android_version)<br>  <br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12L&quot;</span> ]] || [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;13&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    settings put global settings_enable_monitor_phantom_procs <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">elif</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-keyword">if</span> has_gms; <span class="hljs-keyword">then</span><br>      device_config set_sync_disabled_for_tests persistent<br>      device_config put activity_manager max_phantom_processes 2147483647<br>    <span class="hljs-keyword">else</span><br>      device_config put activity_manager max_phantom_processes 2147483647<br>    <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;RED&#125;</span>不支持的 Android 版本: $android_version<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>    <span class="hljs-built_in">return</span><br>  <span class="hljs-keyword">fi</span><br>  <br>  <span class="hljs-built_in">sleep</span> 1  <span class="hljs-comment"># 等待设置生效</span><br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;GREEN&#125;</span>激活成功。<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 取消激活函数</span><br><span class="hljs-function"><span class="hljs-title">deactivate</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;RED&#125;</span>取消激活中...<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>  <span class="hljs-built_in">local</span> android_version=$(get_android_version)<br>  <br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12L&quot;</span> ]] || [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;13&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    settings delete global settings_enable_monitor_phantom_procs<br>  <span class="hljs-keyword">elif</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    device_config delete activity_manager max_phantom_processes<br>    device_config delete activity_manager set_sync_disabled_for_tests<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;RED&#125;</span>不支持的 Android 版本: $android_version<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>    <span class="hljs-built_in">return</span><br>  <span class="hljs-keyword">fi</span><br>  <br>  <span class="hljs-built_in">sleep</span> 1  <span class="hljs-comment"># 等待设置生效</span><br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;RED&#125;</span>取消激活成功。<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 查看当前值函数</span><br><span class="hljs-function"><span class="hljs-title">view_values</span></span>() &#123;<br>  <span class="hljs-built_in">local</span> android_version=$(get_android_version)<br>  <br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;BLUE&#125;</span>Android 版本: $android_version<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>  <br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12L&quot;</span> ]] || [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;13&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;BLUE&#125;</span>settings_enable_monitor_phantom_procs 值：<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>    settings get global settings_enable_monitor_phantom_procs<br>  <span class="hljs-keyword">elif</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$android_version</span>&quot;</span> == <span class="hljs-string">&quot;12&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;BLUE&#125;</span>max_phantom_processes 值：<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>    device_config get activity_manager max_phantom_processes<br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;BLUE&#125;</span>set_sync_disabled_for_tests 值：<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>    device_config get activity_manager set_sync_disabled_for_tests<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;RED&#125;</span>不支持的 Android 版本: $android_version<span class="hljs-variable">$&#123;NC&#125;</span>&quot;</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br>view_values<br>activate<br>view_values<br></code></pre></td></tr></table></figure><ul><li>打开 <code>termux</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb connect localhost:35555<br><span class="hljs-comment"># 此时跳出允许调试，勾上始终允许，但此命令本身会失败</span><br>adb connect localhost:35555<br><span class="hljs-comment"># 再次执行，即可成功</span><br>adb shell sh sdcard/Download/AcBat.sh<br><span class="hljs-comment"># 即可起到和rish相同的效果</span><br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/termux/">termux</category>
      
      
      <comments>https://hexo.limour.top/force-enable-adb-wireless-debugging#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】OpenWrt配置QoS规则</title>
      <link>https://hexo.limour.top/openwrt-qos-configuration</link>
      <guid>https://hexo.limour.top/openwrt-qos-configuration</guid>
      <pubDate>Mon, 16 Dec 2024 13:26:24 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在宿舍环境下，QoS可以帮助优化带宽使用，确保关键应用（如视频通话、在线游戏等）获得足够的带宽支持，减少延迟和卡顿现象。其次，QoS还可以通过限制非关键应用的数据流，防止它们占用过多的带宽资源，从而保障其他重要服务的正常运行。此外，QoS还可以实现公平的带宽分配，避免单一用</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在宿舍环境下，QoS可以帮助优化带宽使用，确保关键应用（如视频通话、在线游戏等）获得足够的带宽支持，减少延迟和卡顿现象。其次，QoS还可以通过限制非关键应用的数据流，防止它们占用过多的带宽资源，从而保障其他重要服务的正常运行。此外，QoS还可以实现公平的带宽分配，避免单一用户过度占用资源，影响其他用户的网络体验。因此，尽管会损失硬件转发性能， OpenWrt 仍然是非常有必要开启 QoS 的。</p><h2 id="更新-kernel">更新 kernel</h2><ul><li>根据版本打开对应的包下载地址：<a href="https://hexo.limour.top/go/#aHR0cHM6Ly9kb3dubG9hZHMuaW1tb3J0YWx3cnQub3JnL3JlbGVhc2VzLzIzLjA1LVNOQVBTSE9UL3RhcmdldHMvaXBxODA3eC9nZW5lcmljL3BhY2thZ2VzLw==" rel="noopener external nofollow noreferrer">ImmortalWrt</a> 和 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9hcmNoaXZlLm9wZW53cnQub3JnL3JlbGVhc2VzLzIzLjA1LjAvdGFyZ2V0cy9pcHE4MDd4L2dlbmVyaWMvcGFja2FnZXMv" rel="noopener external nofollow noreferrer">OpenWrt</a></li><li>找到对应的 kernel 更新包下载，比如 <code>kernel_5.15.171-1-dae069da9eaf18cbc98c1b58b15dc5c9_aarch64_cortex-a53.ipk</code></li><li>OpenWrt 的 <code>系统-软件包-操作-上传软件包</code> 上传更新包并安装</li></ul><h2 id="安装-QoS">安装 QoS</h2><ul><li>OpenWrt 的 <code>系统-软件包-筛选器</code> 搜索并安装 <code>luci-app-qos</code> 和 <code>luci-app-statistics</code></li></ul><h2 id="关闭硬件加速">关闭硬件加速</h2><ul><li>OpenWrt 的 <code>网络-防火墙-常用设置-路由/NAT 分载</code> 关闭 <code>软件流量分载</code> 和 <code>硬件流量分载</code></li><li>OpenWrt 的 <code>网络-接口-全局网络选项</code> 开启 <code>数据包引导</code></li><li>OpenWrt 的 <code>系统-重启</code> 执行重启</li></ul><h2 id="初步配置">初步配置</h2><ul><li>ssh 登录后台执行下面的命令</li><li>其中 <code>85000</code> 和 <code>4000</code> 分别表示下行和上行带宽，一般写真实带宽的 85%</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &gt; /etc/config/qos &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">config classgroup &#x27;Default&#x27;</span><br><span class="hljs-string">        option classes &#x27;Priority Express Normal Bulk&#x27;</span><br><span class="hljs-string">        option default &#x27;Normal&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Priority&#x27;</span><br><span class="hljs-string">        option packetsize &#x27;400&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;10&#x27;</span><br><span class="hljs-string">        option priority &#x27;20&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Priority_down&#x27;</span><br><span class="hljs-string">        option packetsize &#x27;1000&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;10&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Express&#x27;</span><br><span class="hljs-string">        option packetsize &#x27;1000&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;50&#x27;</span><br><span class="hljs-string">        option priority &#x27;10&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Normal&#x27;</span><br><span class="hljs-string">        option packetsize &#x27;1500&#x27;</span><br><span class="hljs-string">        option packetdelay &#x27;100&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;20&#x27;</span><br><span class="hljs-string">        option priority &#x27;5&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Normal_down&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;20&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config class &#x27;Bulk&#x27;</span><br><span class="hljs-string">        option avgrate &#x27;1&#x27;</span><br><span class="hljs-string">        option packetdelay &#x27;200&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config interface &#x27;wan&#x27;                               </span><br><span class="hljs-string">        option classgroup &#x27;Default&#x27;                  </span><br><span class="hljs-string">        option enabled &#x27;1&#x27;                           </span><br><span class="hljs-string">        option upload &#x27;4000&#x27;                         </span><br><span class="hljs-string">        option download &#x27;85000&#x27; </span><br><span class="hljs-string"></span><br><span class="hljs-string">config interface &#x27;lan&#x27;</span><br><span class="hljs-string">        option enabled &#x27;1&#x27;</span><br><span class="hljs-string">        option classgroup &#x27;Default&#x27;</span><br><span class="hljs-string">        option download &#x27;4000&#x27;</span><br><span class="hljs-string">        option upload &#x27;85000&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config reclassify</span><br><span class="hljs-string">        option target &#x27;Priority&#x27;</span><br><span class="hljs-string">        option proto &#x27;udp&#x27;</span><br><span class="hljs-string">        option ports &#x27;53&#x27;</span><br><span class="hljs-string">        option comment &#x27;DNS&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config reclassify</span><br><span class="hljs-string">        option target &#x27;Priority&#x27;</span><br><span class="hljs-string">        option proto &#x27;icmp&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">config classify</span><br><span class="hljs-string">        option target &#x27;Express&#x27;</span><br><span class="hljs-string">        option pktsize &#x27;-500&#x27;</span><br><span class="hljs-string">        option comment &#x27;SDP&#x27;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9vbGR3aWtpLmFyY2hpdmUub3BlbndydC5vcmcvZG9jL3VjaS9xb3M=" rel="noopener external nofollow noreferrer">wiki</a>: Another biggie was the exact meaning of each type. Types are necessary for connection tracking. By default, Classify is not run on a connection that had already been assigned a traffic class, so it is the initial connection-tracked classification. Reclassify can override the traffic class per packet, without altering the connection tracking mark. Default is a fall-back for everything that has not been marked by Classify/Reclassify. Rules get processed by type first (Classify gets processed first, then Reclassify and finally Default) and then based on the order in the configuration file (top to bottom).</p><h2 id="深入配置">深入配置</h2><ul><li>OpenWrt 的 <code>状态-实时信息-连接</code> 里 <code>启用DNS查找</code> 后观察游戏所在的目标地址的特征</li><li>OpenWrt 的 <code>网络-QoS-分类规则</code> 里根据特征添加更细节的规则</li></ul><h2 id="观察配置">观察配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/config/qos <br>tc -s qdisc<br>/usr/lib/qos/generate.sh interface wan<br></code></pre></td></tr></table></figure><h2 id="附加-DSCP">附加 DSCP</h2><ul><li>手动给应用打上 DSCP 标记：<a href="./Windows-configuration-QoS-ensures-smooth-network-connectivity-for-important-applications">Windows配置QoS</a></li></ul><h2 id="附加-Wireshark">附加 Wireshark</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly93d3cud2lyZXNoYXJrLm9yZy8jZG93bmxvYWRMaW5r" rel="noopener external nofollow noreferrer">Wireshark</a></li><li>安装时勾选上插件里的 <code>Sshdump</code></li><li>OpenWrt 的 <code>系统-软件包-筛选器</code> 搜索并安装 <code>tcpdump</code>（会同时捕获 udp）</li><li>打开 Wireshark，选择 <code>捕获—选项</code>：</li></ul><p><img src="https://img.limour.top/2024/12/20/67646241bc3c8.webp" alt=""></p><ul><li>点击 <code>SSH remote capture</code> 标签的前的图标，对远程抓包的参数进行配置</li></ul><p><img src="https://img.limour.top/2024/12/20/6764628b8bd6f.webp" alt=""></p><ul><li>输入路由器的ip地址和ssh端口号</li></ul><p><img src="https://img.limour.top/2024/12/20/676463c5a6c69.webp" alt=""></p><ul><li>输入路由器用户名和密码</li></ul><p><img src="https://img.limour.top/2024/12/20/676463fbc10a6.webp" alt=""></p><ul><li><code>tcpdump</code> 设置, <code>Remote capture filter</code> 写 <code>not (port 22)</code> 就好, 网卡写 <code>br-lan</code></li></ul><p><img src="https://img.limour.top/2024/12/20/67646455a1173.webp" alt=""></p><ul><li>选择 <code>SSH remote capture</code>，点击 <code>开始</code></li></ul><p><img src="https://img.limour.top/2024/12/20/6764621cb9cca.webp" alt=""></p><ul><li>捕获完成后点左上角的红色方块停止捕获</li></ul><p><img src="https://img.limour.top/2024/12/20/676464cd7938b.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/qos/">QoS</category>
      
      
      <comments>https://hexo.limour.top/openwrt-qos-configuration#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】OpenWrt配置DNS解析</title>
      <link>https://hexo.limour.top/openwrt-dns-configuration</link>
      <guid>https://hexo.limour.top/openwrt-dns-configuration</guid>
      <pubDate>Sun, 15 Dec 2024 06:29:44 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;code&gt;锐捷雪豹BE50&lt;/code&gt; 的 &lt;code&gt;游戏加速 QoS&lt;/code&gt; 做得不错，但是没有办法正常的 &lt;code&gt;PPPoE 拨号&lt;/code&gt;，因此只能用来当二级路由接到 OpenWrt 上。上网设置里使用 &lt;code&gt;静态IP&lt;/code&gt;，Open</description>
        
      
      
      
      <content:encoded><![CDATA[<p><code>锐捷雪豹BE50</code> 的 <code>游戏加速 QoS</code> 做得不错，但是没有办法正常的 <code>PPPoE 拨号</code>，因此只能用来当二级路由接到 OpenWrt 上。上网设置里使用 <code>静态IP</code>，OpenWrt 的 <code>网络-DHCP/DNS-静态地址分配</code> 里给它分配了静态地址。但不知道为什么，锐捷的 DNS 解析总出错，因此这里记录一下解决的过程。</p><h2 id="开启SmartDNS">开启SmartDNS</h2><ul><li>OpenWrt 的 <code>服务-SmartDNS-设置-常规设置</code> 的 <code>启用</code> 打勾</li><li>OpenWrt 的 <code>服务-SmartDNS-设置-常规设置</code> 的 <code>自动设置Dnsmasq</code> 打勾</li><li>OpenWrt 的 <code>服务-SmartDNS-上游服务器</code> 的添加合适的 DNS 服务器</li><li>合适的 DNS 服务器可以看 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9pcHcuY24vZG9jL2Vsc2UvZG5zLmh0bWw=" rel="noopener external nofollow noreferrer">ipw.cn</a></li><li>也可以在 <code>状态-概览-网络-IPv4 上游</code> 里看下发的 <code>DNS 1</code> 和 <code>DNS 2</code></li></ul><h2 id="配置SmartDNS">配置SmartDNS</h2><ul><li>OpenWrt 的 <code>服务-SmartDNS-设置-高级设置</code> 的 <code>域名预加载</code> 打上勾</li><li>OpenWrt 的 <code>服务-SmartDNS-设置-高级设置</code> 的 <code>缓存过期服务</code> 去掉勾</li><li>OpenWrt 的 <code>服务-SmartDNS-设置-高级设置</code> 的 <code>持久化缓存</code> 去掉勾</li><li>OpenWrt 的 <code>服务-SmartDNS-设置-高级设置</code> 的 <code>双栈IP优选</code> 和 <code>停用IPv6地址解析</code> 看自己情况</li><li>OpenWrt 的 <code>服务-SmartDNS-设置-第二DNS服务器</code> 的 <code>启用</code> 去掉勾</li></ul><h2 id="DNS重定向">DNS重定向</h2><ul><li>OpenWrt 的 <code>网络-DHCP/DNS-常规设置</code> 的 <code>DNS 重定向</code> 打勾</li><li>OpenWrt 的 <code>网络-DHCP/DNS-常规设置</code> 的 <code>DNS 转发</code> 设置为 <code>SmartDNS</code> 的端口，比如 <code>127.0.0.1#6353</code>，一般都自动设置了</li></ul><h2 id="检查DNS配置">检查DNS配置</h2><ul><li>CN上游测试 <code>nslookup github.com 202.96.209.133</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">服务器:  ns-pd.online.sh.cn<br>Address:  202.96.209.133<br><br>非权威应答:<br>名称:    github.com<br>Address:  20.205.243.166<br></code></pre></td></tr></table></figure><ul><li>GW上游测试 <code>nslookup github.com 1.1.1.1</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">服务器:  one.one.one.one<br>Address:  1.1.1.1<br><br>非权威应答:<br>名称:    github.com<br>Address:  20.205.243.166<br></code></pre></td></tr></table></figure><ul><li>SmartDNS测试 <code>nslookup github.com 192.168.88.1</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">服务器:  ImmortalWrt.lan<br>Address:  192.168.88.1<br><br>非权威应答:<br>名称:    github.com<br>Address:  20.205.243.166<br></code></pre></td></tr></table></figure><ul><li>本地DNS测试 <code>nslookup github.com</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">服务器:  UnKnown<br>Address:  192.168.110.1<br><br>非权威应答:<br>名称:    github.com<br>Address:  20.205.243.166<br></code></pre></td></tr></table></figure><ul><li>关闭v6测试 <code>nslookup -type=AAAA github.com</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">服务器:  UnKnown<br>Address:  192.168.110.1<br><br>*** 没有 github.com 可以使用的 IPv6 address (AAAA)记录<br></code></pre></td></tr></table></figure><h2 id="附加-DoH">附加 DoH</h2><ul><li><a href="./Self-built-ad-blocking-DoH-server">自建DoH服务器</a></li><li><a href="./-Docker-bu-shu-easyconnect">SmartDNS 的 TCP 模式简直是神仙</a></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9weW11bXUuZ2l0aHViLmlvL3NtYXJ0ZG5zL2NvbmZpZ3VyYXRpb24v" rel="noopener external nofollow noreferrer">SmartDNS 的配置项详解</a></li></ul><h2 id="附加-优选ip">附加 优选ip</h2><ul><li>OpenWrt 的 <code>系统-软件包-更新</code> 更新 <code>smartdns</code> 相关的所有包到最新版</li><li>OpenWrt 的 SSH 执行以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/smartdns/<br><br><span class="hljs-built_in">cat</span> &gt; cloudflare.ipv4 &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">173.245.48.0/20</span><br><span class="hljs-string">103.21.244.0/22</span><br><span class="hljs-string">103.22.200.0/22</span><br><span class="hljs-string">103.31.4.0/22</span><br><span class="hljs-string">141.101.64.0/18</span><br><span class="hljs-string">108.162.192.0/18</span><br><span class="hljs-string">190.93.240.0/20</span><br><span class="hljs-string">188.114.96.0/20</span><br><span class="hljs-string">197.234.240.0/22</span><br><span class="hljs-string">198.41.128.0/17</span><br><span class="hljs-string">162.158.0.0/15</span><br><span class="hljs-string">104.16.0.0/13</span><br><span class="hljs-string">104.24.0.0/14</span><br><span class="hljs-string">172.64.0.0/13</span><br><span class="hljs-string">131.0.72.0/22</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><ul><li>OpenWrt 的 <code>服务-SmartDNS-域名规则-域名地址</code> 添加以下配置，保存，重启</li><li>其中 alias 的 ip 从 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL1hJVTIvQ2xvdWRmbGFyZVNwZWVkVGVzdC9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">CloudflareSpeedTest</a> 处获取</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs config">ip-set -name cloudflare -file /etc/smartdns/cloudflare.ipv4<br>ip-rules ip-set:cloudflare -ip-alias 104.18.47.223,104.16.97.145,173.245.58.79<br></code></pre></td></tr></table></figure><ul><li>电脑测试是否生效</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">nslookup img.limour.top<br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/doh/">DoH</category>
      
      
      <comments>https://hexo.limour.top/openwrt-dns-configuration#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】移除Windows中不受信任的证书</title>
      <link>https://hexo.limour.top/remove-untrusted-certificates-windows</link>
      <guid>https://hexo.limour.top/remove-untrusted-certificates-windows</guid>
      <pubDate>Thu, 12 Dec 2024 13:27:24 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;今天逛知乎，有人提到 EasyConnect 会给系统加上自己的 CA 证书。在自己系统里查了一下，发现是真的，因此这里记录一下删除这些恶意证书的过程。&lt;/p&gt;
&lt;h2 id=&quot;查找恶意证书&quot;&gt;查找恶意证书&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;下载 &lt;a href=&quot;https:/</description>
        
      
      
      
      <content:encoded><![CDATA[<p>今天逛知乎，有人提到 EasyConnect 会给系统加上自己的 CA 证书。在自己系统里查了一下，发现是真的，因此这里记录一下删除这些恶意证书的过程。</p><h2 id="查找恶意证书">查找恶意证书</h2><ol><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3N5c2ludGVybmFscy9kb3dubG9hZHMvc2lnY2hlY2s=" rel="noopener external nofollow noreferrer">sigcheck</a></li><li>下载 <a href="https://hexo.limour.top/go/#aHR0cDovL2N0bGRsLndpbmRvd3N1cGRhdGUuY29tL21zZG93bmxvYWQvdXBkYXRlL3YzL3N0YXRpYy90cnVzdGVkci9lbi9hdXRocm9vdHN0bC5jYWI=" rel="noopener external nofollow noreferrer">authrootstl.cab</a></li><li>将 <code>authrootstl.cab</code> 放入 <code>sigcheck</code> 的根目录</li><li>断网执行下面的命令</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sigcheck64.exe <span class="hljs-literal">-tv</span><br>sigcheck64.exe <span class="hljs-literal">-tuv</span><br></code></pre></td></tr></table></figure><ul><li>得到了如下的结果</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs txt">Machine\ROOT:<br>   Sangfor Technologies Inc.<br>        Cert Status:    Valid<br>        Valid Usage:    All<br>        Cert Issuer:    Sangfor Technologies Inc.<br>        Serial Number:  00 DE A4 D5 FA 33 CF 9E 9E<br>        Thumbprint:     A9062C5C1721FF87EBCBD89DF03719755560E7A0<br>        Algorithm:      sha256RSA<br>        Valid from:     23:27 2017/4/27<br>        Valid to:       23:27 2117/4/3<br>Machine\TrustedPublisher:<br>   Sangfor Technologies Inc.<br>        Cert Status:    Valid<br>        Valid Usage:    All<br>        Cert Issuer:    Sangfor Technologies Inc.<br>        Serial Number:  00 DE A4 D5 FA 33 CF 9E 9E<br>        Thumbprint:     A9062C5C1721FF87EBCBD89DF03719755560E7A0<br>        Algorithm:      sha256RSA<br>        Valid from:     23:27 2017/4/27<br>        Valid to:       23:27 2117/4/3<br></code></pre></td></tr></table></figure><h2 id="删除恶意证书">删除恶意证书</h2><ul><li>记录要删除证书的 <code>Thumbprint</code></li><li>将下面的文件保存成 <code>rm-ca.ps1</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">param</span>(<br>[<span class="hljs-built_in">string</span>]<span class="hljs-variable">$Thumbprint</span>=<span class="hljs-variable">$</span>(<span class="hljs-keyword">throw</span> <span class="hljs-string">&quot;Parameter missing: -Thumbprint Thumbprint&quot;</span>)<br>)<br><br><span class="hljs-variable">$CAStores</span>=<span class="hljs-string">&quot;cert:\currentuser\root&quot;</span>, <span class="hljs-string">&quot;cert:\currentuser\authroot&quot;</span>, <span class="hljs-string">&quot;cert:\localmachine\root&quot;</span>, <span class="hljs-string">&quot;cert:\localmachine\authroot&quot;</span><br><br><span class="hljs-variable">$exist</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$store</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$CAStores</span>) &#123;<br>    <span class="hljs-variable">$location</span> = <span class="hljs-variable">$store</span>+<span class="hljs-string">&quot;\&quot;</span>+<span class="hljs-variable">$Thumbprint</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Test-Path</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$location</span>) &#123;<br>        <span class="hljs-variable">$exist</span> = <span class="hljs-number">1</span><br>        <span class="hljs-built_in">Remove-Item</span>  <span class="hljs-literal">-Path</span> <span class="hljs-variable">$location</span> <span class="hljs-literal">-Force</span><br>    &#125;    <br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$exist</span> <span class="hljs-operator">-eq</span> <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Thumbprint does not exist.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>运行 <code>.\rm-ca.ps1 -Thumbprint A9062C5C1721FF87EBCBD89DF03719755560E7A0</code> 删除对应的证书</li><li>再次 <code>查找恶意证书</code> 以确认成功</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/doh/">DoH</category>
      
      
      <comments>https://hexo.limour.top/remove-untrusted-certificates-windows#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】解决 win 笔记本 关机耗电问题</title>
      <link>https://hexo.limour.top/resolve-the-power-consumption-issue-of-windows-laptop-shutdown</link>
      <guid>https://hexo.limour.top/resolve-the-power-consumption-issue-of-windows-laptop-shutdown</guid>
      <pubDate>Thu, 28 Nov 2024 11:34:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;某鱼上淘的笔记本，因为恢复了出厂设置，因此一些修正异常耗电的设置都被还原了，一晚上能耗40%的电，这里记录一下搜集的各种解决措施，以免之后再次重置后忘了怎么操作。这些措施使用后现在确实不怎么耗电了。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintex</description>
        
      
      
      
      <content:encoded><![CDATA[<p>某鱼上淘的笔记本，因为恢复了出厂设置，因此一些修正异常耗电的设置都被还原了，一晚上能耗40%的电，这里记录一下搜集的各种解决措施，以免之后再次重置后忘了怎么操作。这些措施使用后现在确实不怎么耗电了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs regedit">Windows Registry Editor Version 5.00<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\F15576E8-98B7-4186-B944-EAFA664402D9]<br>&quot;Attributes&quot;=dword:00000002<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Power\PowerSettings\238C9FA8-0AAD-41ED-83F4-97BE242C8F20\BD3B718A-0680-4D9D-8AB2-E1D2B4AC806D]<br>&quot;Attributes&quot;=dword:00000002<br></code></pre></td></tr></table></figure><ul><li>以上文件保存为 <code>power.reg</code>，并运行</li><li>右键电池打开电源选项，进入高级选项</li><li>将 <code>&#123;方案名&#125;-待机状态下的网络连接性</code> 改成禁用</li><li>将 <code>睡眠-允许使用唤醒定时器</code> 改成禁用</li><li>设备管理器里对网卡、鼠标等设置为允许计算机关闭此设备，并关闭唤醒功能</li><li>BIOS 里关闭 USB供电</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powercfg <span class="hljs-literal">-devicequery</span> wake_programmable  <span class="hljs-comment"># 查看会唤醒笔记本的设备</span><br>powercfg <span class="hljs-literal">-devicequery</span> wake_armed  <span class="hljs-comment"># 查看会唤醒笔记本的设备</span><br>powercfg <span class="hljs-literal">-devicedisablewake</span> <span class="hljs-string">&quot;Intel(R) Wireless-AC 9560 160MHz&quot;</span>  <span class="hljs-comment"># 禁用掉对应的设备</span><br>powercfg <span class="hljs-literal">-lastwake</span>  <span class="hljs-comment"># 查看上一次睡眠唤醒的设备，进行针对性禁用</span><br> <br>powercfg <span class="hljs-literal">-h</span> off  <span class="hljs-comment"># 关闭休眠</span><br>powercfg /a<br><span class="hljs-comment"># 确认是 S0低电量待机 网络已断开连接</span><br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/win/">win</category>
      
      
      <comments>https://hexo.limour.top/resolve-the-power-consumption-issue-of-windows-laptop-shutdown#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【探索】基于 Nginx 的免流方案</title>
      <link>https://hexo.limour.top/free-traffic-solution-based-on-nginx</link>
      <guid>https://hexo.limour.top/free-traffic-solution-based-on-nginx</guid>
      <pubDate>Mon, 18 Nov 2024 14:50:02 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近冲浪，看到了一种基于 Nginx 的免流方案，可以让 B 站的流量使用 QQ 的免流，这里测试一下是否真的可行。&lt;/p&gt;
&lt;h2 id=&quot;配置-Nginx&quot;&gt;配置 Nginx&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/Docker-bu-shu-Nginx-Pro</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近冲浪，看到了一种基于 Nginx 的免流方案，可以让 B 站的流量使用 QQ 的免流，这里测试一下是否真的可行。</p><h2 id="配置-Nginx">配置 Nginx</h2><ul><li><a href="/Docker-bu-shu-Nginx-Proxy-Manager">反向代理服务</a></li><li>新建一个服务，地址填入 <code>*.bilibili.com</code> 和 <code>im.qq.com</code></li></ul><p><img src="https://img.limour.top/2024/11/18/673b5504b772d.webp" alt=""></p><ul><li>在高级里写入下面的配置</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>  <span class="hljs-attribute">if</span> (<span class="hljs-variable">$http_limour</span> != <span class="hljs-string">&quot;123456&quot;</span>)&#123;<br>    <span class="hljs-attribute">return</span> <span class="hljs-number">404</span>;<br>  &#125;<br>  <span class="hljs-attribute">if</span> (<span class="hljs-variable">$http_host</span> <span class="hljs-regexp">~* ^(.+).bilibili.com$)</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> https://<span class="hljs-variable">$1</span>.bilibili.com;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2024/11/18/673b557a54805.webp" alt=""></p><h2 id="浏览器插件">浏览器插件</h2><ul><li>访问 <code>chrome://version</code> 记录下自己浏览器的位置</li><li>按装插件 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9jaHJvbWV3ZWJzdG9yZS5nb29nbGUuY29tL2RldGFpbC9tb2RoZWFkZXItbW9kaWZ5LWh0dHAtaGVhL2lkZ3BubW9ua25qbm9qZGRma3Bna2xqcGZubmZja2xq" rel="noopener external nofollow noreferrer">ModHeader</a></li><li>插件里给要免流的域名加上自己设置的鉴权头</li></ul><p><img src="https://img.limour.top/2024/11/18/673b56081f820.webp" alt=""></p><h2 id="参数启动">参数启动</h2><ul><li><code>114.514.191.981</code> 需要改成自己服务器的 IP</li><li>两种启动方式任选一种，启动前需要完全关闭浏览器</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">&quot;C:\Program Files\Google\Chrome\Application\chrome.exe&quot; --host-rules=&quot;MAP *.bilibili.com im.qq.com,&quot; --host-resolver-rules=&quot;MAP im.qq.com <span class="hljs-number">114</span>.<span class="hljs-number">514</span>.<span class="hljs-number">191</span>.<span class="hljs-number">981</span>,&quot; --test-<span class="hljs-built_in">type</span> --ignore-certificate-errors<br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Start-Process</span> <span class="hljs-literal">-FilePath</span> <span class="hljs-string">&quot;C:\Program Files\Google\Chrome\Application\chrome.exe&quot;</span> <span class="hljs-literal">-ArgumentList</span> <span class="hljs-selector-tag">@</span>(<br>    <span class="hljs-string">&quot;-host-rules=`&quot;MAP *.bilibili.com im.qq.com,`&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;-host-resolver-rules=`&quot;MAP im.qq.com 114.514.191.981,`&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;-test-type&quot;</span>,<br>    <span class="hljs-string">&quot;-ignore-certificate-errors&quot;</span><br>)<br></code></pre></td></tr></table></figure><h2 id="测试结果">测试结果</h2><ul><li>显然是成功了，就是要小心中间人攻击，不输入敏感信息。</li></ul><p><img src="https://img.limour.top/2024/11/18/673b56fc2d99e.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/nginx/">nginx</category>
      
      
      <comments>https://hexo.limour.top/free-traffic-solution-based-on-nginx#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【想法】基于函数调用和 Agent 的分层 AI 系统构思</title>
      <link>https://hexo.limour.top/concept-of-hierarchical-ai-system-based-on-function-calling-and-agent</link>
      <guid>https://hexo.limour.top/concept-of-hierarchical-ai-system-based-on-function-calling-and-agent</guid>
      <pubDate>Sun, 17 Nov 2024 04:44:53 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近冲浪看到一篇&lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzI0MDIuMTI4NzU=&quot; rel=&quot;noopener external nofollow noreferrer&quot;&gt;有限</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近冲浪看到一篇<a href="https://hexo.limour.top/go/#aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzI0MDIuMTI4NzU=" rel="noopener external nofollow noreferrer">有限模型尺寸无限上下文可以实现图灵等价</a>的文章，结合 Openai 的 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL29wZW5haS9zd2FybQ==" rel="noopener external nofollow noreferrer">swarm</a> 使用  Function Calling 能高效优雅地实现多 Agents，以及 Function Calling 实现 <a href="develop-rag-plugin-for-next-web">RAG</a> 也非常简单，因此产生了这一想法。</p><p><img src="https://img.limour.top/2024/11/17/6739876cbe7a3.webp" alt=""></p><h2 id="需要的组件">需要的组件</h2><ol><li>一个超大尺寸有限上下文的模型，负责深入思考，记为 <code>M0(question, context)</code></li><li>一个中等尺寸较长上下文的模型，负责执行，记为 <code>M1(task, context)</code></li><li>一个较小尺寸超长上下文的模型，负责规划，记为 <code>M2(goal, context)</code></li><li>一个向量检索系统，具有召回、更新和睡眠三个方法，召回记为 <code>R(query)</code>，更新记为 <code>U(memory)</code>，睡眠记为 <code>S()</code></li><li>一个 Agent 框架，将以上四个系统串起来</li></ol><h2 id="向量检索系统">向量检索系统</h2><h3 id="更新方法">更新方法</h3><p><code>U(memory: str) -&gt; bool</code> 方法的描述为 <code>记住一段记忆</code>。</p><p><code>U(memory: str) -&gt; bool</code> 具有一个 <code>memory: str</code> 参数，其描述为 <code>一段需要记住的记忆，300词左右</code>，会返回一个 <code>ok</code>，表示记忆写入成功。</p><p>系统内部写入记忆时，会带上一个具有单向时间流动的时间标记 <code>time: int</code>；初始为写入的时间，同时有一个表示记忆强度的 <code>level: int</code>，初始为 <code>0</code>。</p><h3 id="召回方法">召回方法</h3><p><code>R(query：str) -&gt; List[str]</code> 方法的描述为 <code>回忆相关记忆</code>。</p><p><code>R(query：str) -&gt; List[str]</code> 具有一个 <code>query：str</code> 参数，其描述为 <code>需要在记忆中检索的句子</code>，返回一个相关记忆的列表，列表中的记忆均由 <code>U(memory)</code> 写入而来。</p><p>系统内部召回记忆时会做三件事情，第一是召回记忆，并对召回的记忆进行重排，取重排后的 <code>topn: int</code> 项，以 <code>List[str]</code> 的形式返回。</p><p>第二是对返回的 <code>List[str]</code> 中的记忆的 <code>time: int</code> 更新，值为成功召回的时间，同时判断时间差是否大于某个超参数，大于则 <code>level: int</code> 自增1，否则不变。<code>level: int</code> 为 <code>0</code> 时，必自增1。超参数相对于 <code>level: int</code> 以指数的形式增长，达到某上限后不再变化，同时记忆转为长期记忆，<code>level: int</code> 不再变化。</p><p>第三是对召回成功但未能在重排后进入 <code>List[str]</code> 的记忆，去掉其中属于长期记忆的部分，对余下的部分进行操作。判断 <code>time: int</code> 与当前时间差是否大于某个超参数，大于则 <code>level: int</code> 自减1。若 <code>level: int</code> 为 <code>-1</code>，从记忆中删去此记忆。</p><h3 id="睡眠方法">睡眠方法</h3><p><code>S() -&gt; str</code> 方法的描述为 <code>整理记忆、保持高效</code>。</p><p><code>S() -&gt; str</code> 没有参数，返回一个梦境。内部会随机选取 <code>n: int</code> 段记忆，判断每段记忆的 <code>time: int</code> 与当前时间差是否大于某个超参数，大于则 <code>level: int</code> 自减1。若 <code>level: int</code> 为 <code>-1</code>，从记忆中删去此记忆。被删除的记忆记为 <code>List[str]</code>，调用 <code>M1(task, context)</code>，其 <code>task</code> 为 <code>根据碎片的信息，生成一段梦境</code>，其 <code>context</code> 为被删除的记忆 <code>List[str]</code> 通过分割符连接而成的一段文字。</p><h2 id="M0模型">M0模型</h2><p><code>M0(question: str, context: str) -&gt; str</code> 方法的描述为 <code>针对具体问题进行深入思考</code>，<code>system prompt</code> 为 CoT 的模板。</p><p>其 <code>Function Calling</code> 仅连接了 <code>R(query)</code> 和 <code>U(memory)</code>。</p><p>其只返回最后的结果，以 <code>&lt;|thinking_start|&gt;...&lt;|thinking_end|&gt;</code> 包裹。</p><h2 id="M1模型">M1模型</h2><p><code>M1(task: str, context: str) -&gt; str</code> 方法的描述为 <code>执行具体明确的任务</code>，<code>system prompt</code> 为 <code>分解任务为具体问题，逐个解决问题</code>。</p><p>其 <code>Function Calling</code> 连接了 <code>R(query)</code>、 <code>U(memory)</code>、<code>M0(question, context)</code>，并动态连接其他必要的解决任务的工具。</p><p>其只返回最后的结果。</p><h2 id="M2模型">M2模型</h2><p><code>M2(goal: str, context: str) -&gt; str</code> 方法的描述为 <code>循环规划任务，在长期存活的前提下实现目标</code>，<code>system prompt</code> 为 <code>人生有梦、各自精彩，活下去、找到你的价值、实现你的目标</code>。</p><p>其 <code>Function Calling</code> 连接了 <code>R(query)</code>、<code>U(memory)</code>、<code>S()</code> 和 <code>M1(task, context)</code>。</p><p>其特别附加一个 <code>I(tip: str, timeout: int) -&gt; str</code>， 描述为 <code>请求用户输入</code>，<code>tip: str</code>的描述为 <code>输入提示信息</code>，<code>timeout: int</code>的描述为 <code>愿意等待用户的时间</code>，超时后将返回 <code>用户暂未回复</code>，否则返回用户输入的信息。</p><p>遇到 <code>&lt;|im_end|&gt;</code> 时循环会自动添加 <code>&lt;|im_start|&gt;</code>，继续进行循环，直到系统崩溃。</p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/fc/">FC</category>
      
      <category domain="https://hexo.limour.top/tags/agent/">agent</category>
      
      
      <comments>https://hexo.limour.top/concept-of-hierarchical-ai-system-based-on-function-calling-and-agent#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【探索】为Next-Web开发RAG插件</title>
      <link>https://hexo.limour.top/develop-rag-plugin-for-next-web</link>
      <guid>https://hexo.limour.top/develop-rag-plugin-for-next-web</guid>
      <pubDate>Fri, 15 Nov 2024 20:09:16 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Dify、FastGPT、LangChain之类的用来做知识库都太过笨重，难以在1C1G的服务器上流畅运行。而 ChatGPT-Next-Web 可以在 Vercel 上免费部署，并且 &lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Dify、FastGPT、LangChain之类的用来做知识库都太过笨重，难以在1C1G的服务器上流畅运行。而 ChatGPT-Next-Web 可以在 Vercel 上免费部署，并且 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0NoYXRHUFROZXh0V2ViL05leHRDaGF0LUF3ZXNvbWUtUGx1Z2lucw==" rel="noopener external nofollow noreferrer">NextChat-Awesome-Plugins</a> 带来的插件功能支持 <code>RESTful</code> API 的调用。因此只要用 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2Zhc3RhcGkvZmFzdGFwaQ==" rel="noopener external nofollow noreferrer">FastAPI</a> 将嵌入、重排、Qdrant向量检索包装到一起，就可以为 Next-Web 提供一个 RAG 插件。</p><h2 id="准备工作">准备工作</h2><ul><li>已经提前导入了知识库的 <a href="./using-qdrant-for-vector-retrieval">Qdrant</a></li></ul><p><img src="https://img.limour.top/2024/11/16/6737ad80213d2.webp" alt=""></p><ul><li>可以正常使用的 <a href="./Aggregating-Azure-and-OpenAI-APIs-with-OneAPI">Next-Web</a></li><li>一些相关的文件 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvZmFzdGFwaQ==" rel="noopener external nofollow noreferrer">Limour-dev/fastapi</a></li></ul><h3 id="FastAPI">FastAPI</h3><ul><li>部署 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvZmFzdGFwaS1sYXVuY2hlcg==" rel="noopener external nofollow noreferrer">fastapi-launcher</a></li></ul>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-dfca4d5a" role="button" aria-expanded="false" aria-controls="collapse-dfca4d5a">        <div class="fold-arrow">▶</div>点开查看调试过程      </div>      <div class="fold-collapse collapse" id="collapse-dfca4d5a">        <div class="fold-content">          <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/app/fastapi &amp;&amp; <span class="hljs-built_in">cd</span> ~/app/fastapi &amp;&amp; <span class="hljs-built_in">touch</span> Dockerfile &amp;&amp; <span class="hljs-built_in">touch</span> docker-compose.yml &amp;&amp; <span class="hljs-built_in">touch</span> .<span class="hljs-built_in">env</span><br><span class="hljs-built_in">mkdir</span> -p ~/app/fastapi/app &amp;&amp; <span class="hljs-built_in">mkdir</span> -p ~/app/fastapi/app/Plugins<br></code></pre></td></tr></table></figure><ul><li><code>nano Dockerfile</code> 编辑 <code>Dockerfile</code>，写入下面的文件</li><li><code>docker build -t limour/fastapi .</code> 构建镜像</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.9</span>-alpine<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> pip3 install --no-cache-dir <span class="hljs-string">&quot;fastapi[standard]&quot;</span> httpx</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="hljs-string">&quot;fastapi&quot;</span>, <span class="hljs-string">&quot;dev&quot;</span>, <span class="hljs-string">&quot;main.py&quot;</span>, <span class="hljs-string">&quot;--host&quot;</span>, <span class="hljs-string">&quot;0.0.0.0&quot;</span>]</span><br></code></pre></td></tr></table></figure><ul><li><code>nano ./app/main.py</code> 编辑 <code>main.py</code>，写入下面的文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os, importlib<br><span class="hljs-keyword">from</span> fastapi <span class="hljs-keyword">import</span> FastAPI<br>app = FastAPI()<br><span class="hljs-meta">@app.get(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_root</span>():<br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;Hello&quot;</span>: <span class="hljs-string">&quot;World&quot;</span>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_all_files_in_directory</span>(<span class="hljs-params">directory, ext=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    all_files = []<br>    <span class="hljs-keyword">for</span> root, dirs, files <span class="hljs-keyword">in</span> os.walk(directory):<br>        root: <span class="hljs-built_in">str</span> = root[<span class="hljs-built_in">len</span>(directory):]<br>        root.replace(os.path.sep, <span class="hljs-string">&#x27;.&#x27;</span>)<br>        <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> files:<br>            <span class="hljs-keyword">if</span> file.endswith(ext):<br>                file_path = root + <span class="hljs-string">&#x27;.&#x27;</span> + file[:-<span class="hljs-built_in">len</span>(ext)]<br>                all_files.append(file_path)<br>    <span class="hljs-keyword">return</span> all_files<br><br><span class="hljs-keyword">for</span> _path <span class="hljs-keyword">in</span> get_all_files_in_directory(<span class="hljs-string">&#x27;Plugins&#x27;</span>, <span class="hljs-string">&#x27;.py&#x27;</span>):<br>    plugin = importlib.import_module(_path, <span class="hljs-string">&#x27;Plugins&#x27;</span>)<br>    plugin.callback(app)<br></code></pre></td></tr></table></figure><ul><li><code>nano docker-compose.yml</code> 编辑 <code>docker-compose.yml</code>，写入下面的文件</li><li><code>sudo docker compose up -d</code> 测试是否正常</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">fastapi:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">limour/fastapi</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">env_file:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.env</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./app:/app</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/localtime:/etc/localtime:ro</span><br> <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">default:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">ngpm</span><br></code></pre></td></tr></table></figure><ul><li>反代 <code>FastAPI</code>， 访问可以看到 <code>&quot;Hello&quot;: &quot;World&quot;</code></li></ul><p><img src="https://img.limour.top/2024/11/16/6737b54c2a573.webp" alt=""></p>        </div>      </div>    </div><h2 id="包装API">包装API</h2><ul><li><code>wget -O ./app/Plugins/qdrant.py https://raw.githubusercontent.com/Limour-dev/fastapi/refs/heads/main/Plugins/qdrant.py</code></li></ul><h3 id="配置环境变量">配置环境变量</h3><ul><li><code>nano .env</code> 编辑 <code>.env</code>，写入下面的文件</li><li>依次配置好嵌入、重排和Qdrant数据库</li><li><code>docker compose down &amp;&amp; docker compose up -d</code> 重启</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">QDRANT_EMBD_URL=http://localhost:8080/v1/embeddings<br>QDRANT_EMBD_KEY=no-key<br>QDRANT_EMBD_MODEL=text-embedding-3-small<br>QDRANT_RERANK_URL=http://localhost:8081/v1/rerank<br>QDRANT_RERANK_KEY=no-key<br>QDRANT_RERANK_MODEL=BAAI/bge-reranker-v2-m3<br>QDRANT_URL=http://qdrant:6333<br>QDRANT_KEY=no-key<br>FASTAPI_KEY=123456<br></code></pre></td></tr></table></figure>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-5e836f54" role="button" aria-expanded="false" aria-controls="collapse-5e836f54">        <div class="fold-arrow">▶</div>点开查看调试过程      </div>      <div class="fold-collapse collapse" id="collapse-5e836f54">        <div class="fold-content">          <h3 id="测试环境">测试环境</h3><ul><li>在测试环境编写好脚本后，再转移脚本到 <code>app/Plugins</code> 目录下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n fastapi conda-forge::fastapi conda-forge::httpx conda-forge::python==3.9<br></code></pre></td></tr></table></figure><h3 id="编写脚本">编写脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O app/Plugins/qdrant.py https://raw.githubusercontent.com/Limour-dev/fastapi/refs/heads/main/Plugins/qdrant.py<br></code></pre></td></tr></table></figure><h3 id="测试脚本">测试脚本</h3><ul><li>填入自己的信息后，运行 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvZmFzdGFwaS9ibG9iL21haW4vVGVzdFFkcmFudC5weQ==" rel="noopener external nofollow noreferrer">TestQdrant.py</a></li></ul>        </div>      </div>    </div><h2 id="配置插件">配置插件</h2><ul><li>获取 <code>openapi.json</code> ，例如访问 <code>https://fastapi.limour.top/openapi.json</code></li><li>将其修改成下面的格式</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;openapi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3.1.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;info&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;qdrant&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;使用 Qdrant 检索知识库进行 RAG&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;v1.0.0&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://fastapi.limour.top&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;paths&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;/qdrant/v1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;post&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;operationId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;qdrant&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;summary&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;使用 Qdrant 检索知识库进行 RAG&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;requestBody&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;required&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;application/json&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>              <span class="hljs-attr">&quot;schema&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;object&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;required&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;input&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                  <span class="hljs-attr">&quot;input&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;需要在知识库中检索的句子&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><br>              <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>将修改后的 json，填入 next-web 的插件中，并设置好 Authoritarian</li></ul><p><img src="https://img.limour.top/2024/11/16/67384ce3a26aa.webp" alt=""></p><h2 id="测试插件">测试插件</h2><p><img src="https://img.limour.top/2024/11/16/67384c8ff29e6.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/docker/">docker</category>
      
      <category domain="https://hexo.limour.top/tags/rag/">rag</category>
      
      <category domain="https://hexo.limour.top/tags/openai/">openai</category>
      
      
      <comments>https://hexo.limour.top/develop-rag-plugin-for-next-web#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【探索】使用 qdrant 进行向量检索</title>
      <link>https://hexo.limour.top/using-qdrant-for-vector-retrieval</link>
      <guid>https://hexo.limour.top/using-qdrant-for-vector-retrieval</guid>
      <pubDate>Sun, 10 Nov 2024 04:43:15 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;a href=&quot;https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3FkcmFudC9xZHJhbnQ=&quot; rel=&quot;noopener external nofollow noreferrer&quot;&gt;Qdrant&lt;/a&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL3FkcmFudC9xZHJhbnQ=" rel="noopener external nofollow noreferrer">Qdrant</a> 是一个开源的向量数据库，专为高性能相似性搜索和机器学习应用而设计，比 <a href="./-qian-yi--ji-yu-Chroma-da-jian-ge-ren-zhi-shi-ku-de-quan-wen-suo-yin">Chroma</a> 更轻量(约80MiB)更快。它支持基于余弦相似度、欧氏距离等多种相似性度量的向量检索，并提供了灵活的过滤和分组功能。Qdrant 使用 Rust 语言编写，具有高效的索引和存储机制，能够快速处理大规模向量数据，适用于推荐系统、语义搜索、图像相似性匹配等场景。它提供了简单易用的 API，支持 gRPC 和 REST 接口，并且可以轻松集成到各种编程语言和机器学习框架中，是构建向量相似性搜索应用的理想选择。</p><h2 id="部署">部署</h2><ul><li><a href="/Docker-bu-shu-Nginx-Proxy-Manager">反向代理服务</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/app/qdrant &amp;&amp; <span class="hljs-built_in">cd</span> ~/app/qdrant &amp;&amp; nano docker-compose.yml<br>wget https://raw.githubusercontent.com/qdrant/qdrant/refs/heads/master/config/production.yaml<br>sudo docker compose up -d<br>sudo docker compose logs<br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">qdrant:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">qdrant/qdrant:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">expose:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">6333</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">6334</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">6335</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./qdrant_data:/qdrant/storage</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./production.yaml:/qdrant/config/production.yaml</span><br> <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">default:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">ngpm</span><br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2024/11/10/673041358634e.webp" alt=""></p><ul><li>访问 <code>https://qdrant.limour.top/dashboard</code> 查看仪表盘</li></ul><h2 id="嵌入">嵌入</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2dnZXJnYW5vdi9sbGFtYS5jcHAvcmVsZWFzZXM=" rel="noopener external nofollow noreferrer">llama.cpp</a><ul><li>下载 <code>cudart-llama-bin-win-cu11.7.1-x64</code></li><li>下载对应后缀的 <code>llama-b4061-bin-win-cuda-cu11.7.1-x64</code></li><li>将两者解压到同一个目录</li></ul></li><li>从 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9zcGFjZXMvbXRlYi9sZWFkZXJib2FyZA==" rel="noopener external nofollow noreferrer">MTEB</a> 上找一个良好的嵌入模型</li><li>下载 GGUF 格式的嵌入模型，比如 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby93ZW5jYW4tbGFiL0RtZXRhLWVtYmVkZGluZy16aC1zbWFsbC1HR1VGL2Jsb2IvbWFpbi9EbWV0YS1lbWJlZGRpbmctemgtc21hbGwtUTRfS19NLmdndWY=" rel="noopener external nofollow noreferrer">Dmeta-embedding-zh-small-GGUF</a></li><li>根据<a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL2dnZXJnYW5vdi9sbGFtYS5jcHAvYmxvYi9tYXN0ZXIvZXhhbXBsZXMvc2VydmVyL1JFQURNRS5tZA==" rel="noopener external nofollow noreferrer">文档</a>配置参数启动嵌入服务</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">./llama<span class="hljs-literal">-server</span>.exe <span class="hljs-literal">-m</span> ./embd/Dmeta<span class="hljs-literal">-embedding-zh-small-Q4_K_M</span>.gguf <span class="hljs-literal">-c</span> <span class="hljs-number">1024</span> <span class="hljs-literal">--embedding</span> <span class="hljs-literal">-fa</span> <span class="hljs-literal">-ngl</span> <span class="hljs-number">99</span> <span class="hljs-literal">--port</span> <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><ul><li>测试嵌入模型</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$headers</span> = <span class="hljs-selector-tag">@</span>&#123;<br>    <span class="hljs-string">&quot;Content-Type&quot;</span> = <span class="hljs-string">&quot;application/json&quot;</span><br>    <span class="hljs-string">&quot;Authorization&quot;</span> = <span class="hljs-string">&quot;Bearer no-key&quot;</span><br>&#125;<br><br><span class="hljs-variable">$body</span> = <span class="hljs-selector-tag">@</span>&#123;<br>    <span class="hljs-string">&quot;input&quot;</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>)<br>    <span class="hljs-string">&quot;model&quot;</span> = <span class="hljs-string">&quot;GPT-4o&quot;</span><br>    <span class="hljs-string">&quot;encoding_format&quot;</span> = <span class="hljs-string">&quot;float&quot;</span><br>&#125; | <span class="hljs-built_in">ConvertTo-Json</span><br><br><span class="hljs-variable">$response</span> = <span class="hljs-built_in">Invoke-WebRequest</span> <span class="hljs-literal">-Uri</span> <span class="hljs-string">&quot;http://localhost:8080/v1/embeddings&quot;</span> <span class="hljs-literal">-Method</span> Post <span class="hljs-literal">-Headers</span> <span class="hljs-variable">$headers</span> <span class="hljs-literal">-Body</span> <span class="hljs-variable">$body</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$response</span>.Content<br></code></pre></td></tr></table></figure><h2 id="重排">重排</h2><p>为了在千万级数据上进行检索，返回的结果牺牲了一定的精确度，同时双端的 embedding 模型也不如单端的 rerank 模型精确，因此检索后的结果还需要进行一次重新排序。</p><ul><li>下载 GGUF 格式的重排模型，比如 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9ncHVzdGFjay9iZ2UtcmVyYW5rZXItdjItbTMtR0dVRi9ibG9iL21haW4vYmdlLXJlcmFua2VyLXYyLW0zLVE0X0tfTS5nZ3Vm" rel="noopener external nofollow noreferrer">bge-reranker-v2-m3-GGUF</a></li><li>启动模型</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">./llama<span class="hljs-literal">-server</span>.exe <span class="hljs-literal">-m</span> ./rerk/bge<span class="hljs-literal">-reranker-v2-m3-Q4_K_M</span>.gguf <span class="hljs-literal">--reranking</span> <span class="hljs-literal">-fa</span> <span class="hljs-literal">-ngl</span> <span class="hljs-number">99</span> <span class="hljs-literal">--port</span> <span class="hljs-number">8081</span><br></code></pre></td></tr></table></figure><ul><li>测试嵌入模型</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$headers</span> = <span class="hljs-selector-tag">@</span>&#123;<br>    <span class="hljs-string">&quot;Content-Type&quot;</span> = <span class="hljs-string">&quot;application/json&quot;</span><br>    <span class="hljs-string">&quot;Authorization&quot;</span> = <span class="hljs-string">&quot;Bearer no-key&quot;</span><br>&#125;<br><br><span class="hljs-variable">$body</span> = <span class="hljs-selector-tag">@</span>&#123;<br>    <span class="hljs-string">&quot;documents&quot;</span> = <span class="hljs-selector-tag">@</span>(<span class="hljs-string">&quot;hi&quot;</span>, <span class="hljs-string">&quot;it is a bear&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>, <span class="hljs-string">&quot;The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.&quot;</span>)<br><span class="hljs-string">&quot;query&quot;</span> = <span class="hljs-string">&quot;What is panda?&quot;</span><br><span class="hljs-string">&quot;top_n&quot;</span> = <span class="hljs-number">3</span><br>    <span class="hljs-string">&quot;model&quot;</span> = <span class="hljs-string">&quot;GPT-4o&quot;</span><br>&#125; | <span class="hljs-built_in">ConvertTo-Json</span><br><br><span class="hljs-variable">$response</span> = <span class="hljs-built_in">Invoke-WebRequest</span> <span class="hljs-literal">-Uri</span> <span class="hljs-string">&quot;http://localhost:8081/v1/rerank&quot;</span> <span class="hljs-literal">-Method</span> Post <span class="hljs-literal">-Headers</span> <span class="hljs-variable">$headers</span> <span class="hljs-literal">-Body</span> <span class="hljs-variable">$body</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$response</span>.Content<br></code></pre></td></tr></table></figure><h2 id="客户端">客户端</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">conda create <span class="hljs-literal">-n</span> rag conda<span class="hljs-literal">-forge</span>::qdrant<span class="hljs-literal">-client</span><br></code></pre></td></tr></table></figure><ul><li>获取测试所用内容 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvdGVzdF9yYWdfcWRyYW50" rel="noopener external nofollow noreferrer">test_rag_qdrant</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> qdrant_client <span class="hljs-keyword">import</span> QdrantClient<br><span class="hljs-keyword">from</span> qdrant_client.models <span class="hljs-keyword">import</span> VectorParams, Distance<br><span class="hljs-keyword">from</span> qdrant_client.models <span class="hljs-keyword">import</span> PointStruct<br><span class="hljs-keyword">from</span> m98_rag <span class="hljs-keyword">import</span> embd, readChunks, rerank<br><br>QDRANT_URL = os.getenv(<span class="hljs-string">&#x27;QDRANT_URL&#x27;</span>, <span class="hljs-string">&#x27;http://localhost:6333&#x27;</span>)<br>QDRANT_KEY = os.getenv(<span class="hljs-string">&#x27;QDRANT_KEY&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br><br>client = QdrantClient(url=QDRANT_URL,<br>                      api_key=QDRANT_KEY,<br>                      timeout=<span class="hljs-number">100</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Hits</span>(<span class="hljs-title class_ inherited__">list</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, hits, query_: <span class="hljs-built_in">str</span>, limit_: <span class="hljs-built_in">int</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(hits)<br>        self.query = query_<br>        self.limit = limit_<br>        self.res = <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rerank</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> self.res <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            hits = [hit.payload[<span class="hljs-string">&#x27;text&#x27;</span>] <span class="hljs-keyword">for</span> hit <span class="hljs-keyword">in</span> self]<br>            self.res = rerank(hits, query_=self.query, top_n_=self.limit)<br>        <span class="hljs-keyword">return</span> self.res<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">top</span>(<span class="hljs-params">self, top_n=<span class="hljs-number">3</span>, related_=<span class="hljs-literal">True</span></span>):<br>        res = self.rerank()<br>        <span class="hljs-keyword">if</span> related_:<br>            <span class="hljs-keyword">return</span> [hit[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> hit <span class="hljs-keyword">in</span> res[:top_n] <span class="hljs-keyword">if</span> hit[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> [hit[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> hit <span class="hljs-keyword">in</span> res[:top_n]]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">print</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-string">&#x27;\n&#x27;</span> + <span class="hljs-string">&#x27;=&#x27;</span> * <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;\n&#x27;</span>).join(self.top())<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RAG</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, collection_name=<span class="hljs-string">&quot;my_collection&quot;</span>, vectors_size=<span class="hljs-number">768</span></span>):<br>        self.collection_name = collection_name<br>        self.vectors_size = vectors_size<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> client.collection_exists(self.collection_name):<br>            client.create_collection(<br>                collection_name=self.collection_name,<br>                vectors_config=VectorParams(size=self.vectors_size, distance=Distance.COSINE)<br>            )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">upsert</span>(<span class="hljs-params">self, chunks_: <span class="hljs-built_in">list</span>, ID_: <span class="hljs-built_in">int</span> = <span class="hljs-number">0</span></span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(chunks_), <span class="hljs-number">8</span>):<br>            batch = chunks_[i: i + <span class="hljs-number">8</span>]<br>            <span class="hljs-built_in">print</span>(batch)<br>            vectors = embd(batch)<br>            client.upsert(<br>                collection_name=self.collection_name,<br>                points=[<br>                    PointStruct(<br>                        <span class="hljs-built_in">id</span>=ID_ + i + idx,<br>                        vector=vector[<span class="hljs-number">1</span>],<br>                        payload=&#123;<span class="hljs-string">&quot;text&quot;</span>: vector[<span class="hljs-number">0</span>]&#125;<br>                    )<br>                    <span class="hljs-keyword">for</span> idx, vector <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(vectors)<br>                ]<br>            )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">size</span>(<span class="hljs-params">self</span>):<br>        count = client.count(collection_name=self.collection_name)<br>        <span class="hljs-built_in">print</span>(self.collection_name, <span class="hljs-string">&#x27;size:&#x27;</span>, count.count)<br>        <span class="hljs-keyword">return</span> count.count<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">clear</span>(<span class="hljs-params">self</span>):<br>        client.delete_collection(collection_name=self.collection_name)<br>        client.create_collection(<br>            collection_name=self.collection_name,<br>            vectors_config=VectorParams(size=self.vectors_size, distance=Distance.COSINE)<br>        )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">search</span>(<span class="hljs-params">self, query_: <span class="hljs-built_in">str</span>, limit_: <span class="hljs-built_in">int</span> = <span class="hljs-number">5</span></span>):<br>        query_vector = embd([query_])<br>        hits = client.search(<br>            collection_name=self.collection_name,<br>            query_vector=query_vector[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>],<br>            limit=limit_  <span class="hljs-comment"># Return 5 closest points</span><br>        )<br>        <span class="hljs-keyword">return</span> Hits(hits, query_, limit_)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(QDRANT_URL)<br>    <span class="hljs-built_in">print</span>(QDRANT_KEY)<br>    test = RAG()<br>    <span class="hljs-keyword">if</span> test.size() &lt;= <span class="hljs-number">0</span>:<br>        chunks = readChunks(<span class="hljs-string">&#x27;./test.md&#x27;</span>)<br>        test.upsert(chunks)<br>    tmp = test.search(<span class="hljs-string">&#x27;机器人限拥令是什么&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(tmp.<span class="hljs-built_in">print</span>())<br></code></pre></td></tr></table></figure><ul><li>所得到的结果还不错~</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs txt">24小时客服在线电话：1919-114514810 <br> *注意：根据《国家质量标准认证iso7002》，《机器人管理条例》，机器人类产品不宜连续使用超过十五年。请定期到指定售后地点进行重置。 <br>## 十三<br>机器人限拥令的实施开端于2090年5月的一起案件。<br>被害人约翰逊的尸体在其失踪的次日被发现于他自家的住宅。死状相当惨烈：在R级新闻团体才能合法展示的照片中，整个人被从身体中间沿着脊椎切割成两半，一半被他所购买的机器人ct13694582(型号为玛格丽特c6)紧紧抱在床上，另一半被他购买的另一台机器人ct12487967(型号为子矜7z)小心的存放在冷库里。案件现场几乎满地都是受害人的血，散发着浓烈的腥味，而身为罪魁祸首的两台机器人，一台已经关机，另一台则刻板地重复着几个动作。<br>根据记录，两台机器人和受害人共处的时间分别长达18年和17年。在这么长的时间里，受害人以近乎均等的时间使用二者，并不下数百次的分别向它们倾诉 我最爱的是你  我只爱你一个人  你比她漂亮多了 等明显带有示爱情绪的情话。<br>==================================================<br>所以，当别的机器人可以随意更换外观，模拟他人人格，构造全息幻象时，她还是只能用老旧的芯片链接一般的网络，在老掉牙的网站上寻找几个能逗主人开心的笑话。<br>望着远处飞来飞去的垃圾车，他把烟掐掉，踩灭， 哪怕是半个月前，零件黑市还没有倒闭的时候，我都还会考虑继续把你放在家里供着……可是现在，你这种型号的备件都已经买不到了，我只能选择……放弃。 <br>如女子潮红面颊的晚霞浸透了半边天空，晚风中他回忆着有关她的那些细节。<br>PR3-7150家庭型机器人，东湾半导体与电子技术有限公司研发，远海机器承制，2069年第一次发售，第二年夺得电子家用商品年度大奖……而如今，则是无人问津的古董。她的编号是ct34679158，款式是茉莉白。她在前主人的家里任劳任怨地干了18年，因满身故障而被随手丢掉。之后又被他的父母在地摊上买下。此后不久，机器人限拥政策便开始实施了。<br>和外人说话时，他往往称她为 那倒霉玩意儿 ，不过私下里，他总是叫她的名字——爱尔莎。<br>==================================================<br>机器人心理学中把机器人的这种行为称之为 情绪过载 。早期机器人的情感矩阵尚不足以自我解决情感函数和外部计算之间的冲突，最终导致模拟情绪的数值极化和内存溢出。用大家熟悉的名词来说——机器人也会争风吃醋。<br>机器人管理委员会迅速意识到，多台机器人的集群化使用或许会导致系统的混乱现象，从而使其逐渐失控。<br>次年，机器人限拥条例公布，社会一片哗然。<br>不过，贯穿条例诞生始终的是，公众的大部分兴趣都集中在了机器人病娇、机器人吃醋、机器人销毁、智能板块这样的话题上。只有很少的一部分人提及：<br>这是不是意味着，机器人也会懂得，什么是爱?<br>以及如果是，那么我们该怎样去爱它们?<br>## 十四<br>他一遍遍的把爱尔莎的人格芯片取出来调试，又一遍遍放回去。<br>如此重复。<br>…………<br>直到有一天晚上他感到自己失魂落魄，整个世界失焦一般的远去。此时，他才想起来自己已经有相当一阵子没和别人说过话。<br>把芯片放在一边，打开了命令模式的爱尔莎。<br></code></pre></td></tr></table></figure><h2 id="TODO">TODO</h2><ul><li>使用 <code>NLTK</code> || <code>spaCy</code> 等<a href="https://hexo.limour.top/go/#aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NzY5NzkzMDY=" rel="noopener external nofollow noreferrer">优化切分</a> chunks 时的精确度。</li></ul>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/docker/">docker</category>
      
      <category domain="https://hexo.limour.top/tags/rag/">rag</category>
      
      
      <comments>https://hexo.limour.top/using-qdrant-for-vector-retrieval#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】使用 circacompare 分析生物节律</title>
      <link>https://hexo.limour.top/shi-yong-circacompare-fen-xi-sheng-wu-jie-lv</link>
      <guid>https://hexo.limour.top/shi-yong-circacompare-fen-xi-sheng-wu-jie-lv</guid>
      <pubDate>Fri, 08 Nov 2024 15:50:20 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;circacompare 是一个专为分析生物节律数据而设计的 R 包。它的主要功能是比较不同条件下的节律参数，例如振幅、周期和相位。circacompare 使用非线性混合效应模型来拟合节律数据，这使得它在处理具有重复测量和复杂实验设计的数据时表现出色。与 circacom</description>
        
      
      
      
      <content:encoded><![CDATA[<p>circacompare 是一个专为分析生物节律数据而设计的 R 包。它的主要功能是比较不同条件下的节律参数，例如振幅、周期和相位。circacompare 使用非线性混合效应模型来拟合节律数据，这使得它在处理具有重复测量和复杂实验设计的数据时表现出色。与 circacompare 相比，<a href="./shi-yong--JTK-CYCLE--suan-fa-fen-xi-sheng-wu-jie-lv">MetaCycle</a> 是另一个流行的 R 包，用于生物节律分析。MetaCycle 提供了多种算法（如 ARSER、JTK_CYCLE 和 Lomb-Scargle）来检测时间序列数据中的周期性信号。它的优势在于能够处理大规模数据集，并且适用于各种不同的实验条件。</p><h2 id="conda安装包">conda安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n zct conda-forge::r-tidyverse conda-forge::r-irkernel<br>conda run -n zct Rscript -e <span class="hljs-string">&quot;IRkernel::installspec(name=&#x27;zct&#x27;, displayname=&#x27;zct&#x27;)&quot;</span><br>conda run -n zct Rscript -e <span class="hljs-string">&quot;install.packages(&#x27;circacompare&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><h2 id="导入包和数据">导入包和数据</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>circacompare<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br><br>dt <span class="hljs-operator">&lt;-</span> readr<span class="hljs-operator">::</span>read_csv<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;./circacompare.CSV&#x27;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>organ <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>organ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>project <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>project<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="两组比较">两组比较</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs R">s_symbol <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Bmal1&#x27;</span> <br>s_organ <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Heart&#x27;</span><br>s_project <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;compare1&#x27;</span><br><br><span class="hljs-comment"># 根据参数选择数据</span><br>dt_s <span class="hljs-operator">&lt;-</span> dt <span class="hljs-operator">%&gt;%</span> <br>subset<span class="hljs-punctuation">(</span>symbol <span class="hljs-operator">==</span> s_symbol <span class="hljs-operator">&amp;</span> organ <span class="hljs-operator">==</span> s_organ <span class="hljs-operator">&amp;</span> project <span class="hljs-operator">==</span> s_project<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 进行比较</span><br>result <span class="hljs-operator">&lt;-</span> circacompare<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> dt_s<span class="hljs-punctuation">,</span> col_time <span class="hljs-operator">=</span> <span class="hljs-string">&quot;time&quot;</span><span class="hljs-punctuation">,</span> col_group <span class="hljs-operator">=</span> <span class="hljs-string">&quot;group&quot;</span><span class="hljs-punctuation">,</span> col_outcome <span class="hljs-operator">=</span> <span class="hljs-string">&quot;measure&quot;</span><span class="hljs-punctuation">,</span> alpha_threshold <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看绘图</span><br>save_plot <span class="hljs-operator">&lt;-</span> result<span class="hljs-operator">$</span>plot <span class="hljs-operator">+</span> <br>theme_minimal<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>ggtitle<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>theme<span class="hljs-punctuation">(</span>plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看统计汇总</span><br>result<span class="hljs-operator">$</span>summary<br>tmp <span class="hljs-operator">&lt;-</span> circacompare<span class="hljs-operator">:::</span>extract_model_coefs<span class="hljs-punctuation">(</span>result<span class="hljs-operator">$</span>fit<span class="hljs-punctuation">)</span><br>tmp<br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<br><br>save_plot<br><br><span class="hljs-comment"># 保存图为 pdf</span><br><span class="hljs-punctuation">&#123;</span>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;pdf/&#x27;</span><span class="hljs-punctuation">,</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">,</span> s_project<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;.pdf&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br> print<span class="hljs-punctuation">(</span>save_plot<span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 导出拟合的数据</span><br>save_plot<br>x <span class="hljs-operator">&lt;-</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">24</span><span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">)</span><br>newdf <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>time <span class="hljs-operator">=</span> x<span class="hljs-punctuation">,</span> g1 <span class="hljs-operator">=</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>eq_1<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> g2 <span class="hljs-operator">=</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>eq_2<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>write.csv<span class="hljs-punctuation">(</span>newdf<span class="hljs-punctuation">,</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;csv/&#x27;</span><span class="hljs-punctuation">,</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">,</span> s_project<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;.csv&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="单组绘图">单组绘图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs R">s_symbol <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Rev-erbα&#x27;</span> <br>s_organ <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Kidney&#x27;</span><br>s_project <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;KO-AL&#x27;</span><br><br><span class="hljs-comment"># 根据参数选择数据</span><br>dt_s <span class="hljs-operator">&lt;-</span> dt <span class="hljs-operator">%&gt;%</span> <br>subset<span class="hljs-punctuation">(</span>symbol <span class="hljs-operator">==</span> s_symbol <span class="hljs-operator">&amp;</span> organ <span class="hljs-operator">==</span> s_organ <span class="hljs-operator">&amp;</span> project <span class="hljs-operator">==</span> s_project<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 进行统计分析</span><br>options<span class="hljs-punctuation">(</span>show.error.messages <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> warn <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>result <span class="hljs-operator">&lt;-</span> try<span class="hljs-punctuation">(</span><span class="hljs-punctuation">&#123;</span><br>  circa_single<span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> dt_s<span class="hljs-punctuation">,</span> col_time <span class="hljs-operator">=</span> <span class="hljs-string">&quot;time&quot;</span><span class="hljs-punctuation">,</span> col_outcome <span class="hljs-operator">=</span> <span class="hljs-string">&quot;measure&quot;</span><span class="hljs-punctuation">,</span> period <span class="hljs-operator">=</span> <span class="hljs-number">24</span><span class="hljs-punctuation">,</span> alpha_threshold <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    timeout_n <span class="hljs-operator">=</span> <span class="hljs-number">100000</span><span class="hljs-punctuation">,</span><br>    control <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>      main_params <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;k&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;alpha&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;phi&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> silent <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>options<span class="hljs-punctuation">(</span>show.error.messages <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> warn <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># “k”表示中值，“alpha”表示振幅，“phi”表示相位。引入的额外参数是“tau”表示周期。</span><br><br><span class="hljs-comment"># 查看绘图</span><br>save_plot <span class="hljs-operator">&lt;-</span> result<span class="hljs-operator">$</span>plot <span class="hljs-operator">+</span> <br>theme_minimal<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>ggtitle<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>theme<span class="hljs-punctuation">(</span>plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看统计汇总</span><br>result<span class="hljs-operator">$</span>summary<br>tmp <span class="hljs-operator">&lt;-</span> circacompare<span class="hljs-operator">:::</span>extract_model_coefs<span class="hljs-punctuation">(</span>result<span class="hljs-operator">$</span>fit<span class="hljs-punctuation">)</span><br>tmp<br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<br><br>save_plot<br><br><span class="hljs-comment"># 保存图为 pdf</span><br><span class="hljs-punctuation">&#123;</span>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;pdf/&#x27;</span><span class="hljs-punctuation">,</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">,</span> s_project<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;.pdf&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br> print<span class="hljs-punctuation">(</span>save_plot<span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="周期和衰减参数">周期和衰减参数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs R">s_symbol <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Bmal1&#x27;</span> <br>s_organ <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Heart&#x27;</span><br>s_project <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;compare1&#x27;</span><br><br><span class="hljs-comment"># 根据参数选择数据</span><br>dt_s <span class="hljs-operator">&lt;-</span> dt <span class="hljs-operator">%&gt;%</span> <br>subset<span class="hljs-punctuation">(</span>symbol <span class="hljs-operator">==</span> s_symbol <span class="hljs-operator">&amp;</span> organ <span class="hljs-operator">==</span> s_organ <span class="hljs-operator">&amp;</span> project <span class="hljs-operator">==</span> s_project<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 进行统计分析</span><br>options<span class="hljs-punctuation">(</span>show.error.messages <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> warn <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>result <span class="hljs-operator">&lt;-</span> try<span class="hljs-punctuation">(</span><span class="hljs-punctuation">&#123;</span><br>  circacompare<span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> dt_s<span class="hljs-punctuation">,</span> col_time <span class="hljs-operator">=</span> <span class="hljs-string">&quot;time&quot;</span><span class="hljs-punctuation">,</span> col_group <span class="hljs-operator">=</span> <span class="hljs-string">&quot;group&quot;</span><span class="hljs-punctuation">,</span> col_outcome <span class="hljs-operator">=</span> <span class="hljs-string">&quot;measure&quot;</span><span class="hljs-punctuation">,</span> period <span class="hljs-operator">=</span> <span class="hljs-number">24</span><span class="hljs-punctuation">,</span> alpha_threshold <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    timeout_n <span class="hljs-operator">=</span> <span class="hljs-number">100000</span><span class="hljs-punctuation">,</span><br>    control <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>      main_params <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;k&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;alpha&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;phi&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      decay_params <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;alpha&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      grouped_params <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;alpha&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;alpha_decay&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> silent <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>options<span class="hljs-punctuation">(</span>show.error.messages <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> warn <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># “k”表示中值，“alpha”表示振幅，“phi”表示相位。引入的额外参数是“tau”表示周期。</span><br><br><span class="hljs-comment"># 查看绘图</span><br>save_plot <span class="hljs-operator">&lt;-</span> result<span class="hljs-operator">$</span>plot <span class="hljs-operator">+</span> <br>theme_minimal<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>ggtitle<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>theme<span class="hljs-punctuation">(</span>plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看统计汇总</span><br>result<span class="hljs-operator">$</span>summary<br>tmp <span class="hljs-operator">&lt;-</span> circacompare<span class="hljs-operator">:::</span>extract_model_coefs<span class="hljs-punctuation">(</span>result<span class="hljs-operator">$</span>fit<span class="hljs-punctuation">)</span><br>tmp<br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>tmp<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;phi1&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;estimate&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;std_error&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> save_plot<span class="hljs-operator">$</span>plot_env<span class="hljs-operator">$</span>V<span class="hljs-punctuation">[</span><span class="hljs-string">&#x27;tau&#x27;</span><span class="hljs-punctuation">]</span><br>tmp<br><br>save_plot<br><br><span class="hljs-comment"># 保存图为 pdf</span><br><span class="hljs-punctuation">&#123;</span>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;pdf/&#x27;</span><span class="hljs-punctuation">,</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>s_symbol<span class="hljs-punctuation">,</span> s_organ<span class="hljs-punctuation">,</span> s_project<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;_&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;_decay.pdf&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br> print<span class="hljs-punctuation">(</span>save_plot<span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/%E8%8A%82%E5%BE%8B/">节律</category>
      
      
      <comments>https://hexo.limour.top/shi-yong-circacompare-fen-xi-sheng-wu-jie-lv#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】将OSS挂载为WebDAV</title>
      <link>https://hexo.limour.top/Mount-OSS-as-a-WebMAV</link>
      <guid>https://hexo.limour.top/Mount-OSS-as-a-WebMAV</guid>
      <pubDate>Fri, 01 Nov 2024 05:03:45 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;OSS（对象存储服务）是一种分布式存储服务，它提供了简单的Web服务接口，使得用户可以在任何地方、任何时间存储和检索数据。而WebDAV（基于Web的分布式创作和版本控制）则是一个基于HTTP的协议，它允许用户通过网络对文件进行编辑和管理。将OSS转换成WebDAV可以方便</description>
        
      
      
      
      <content:encoded><![CDATA[<p>OSS（对象存储服务）是一种分布式存储服务，它提供了简单的Web服务接口，使得用户可以在任何地方、任何时间存储和检索数据。而WebDAV（基于Web的分布式创作和版本控制）则是一个基于HTTP的协议，它允许用户通过网络对文件进行编辑和管理。将OSS转换成WebDAV可以方便使用Zotero这类文献管理软件进行同步。Zotero支持通过WebDAV协议同步附件，这样用户可以在不同的设备和平台上访问和管理自己的文献资料，提高了工作和研究的效率。因此，使用WebDAV对接OSS可以为Zotero用户带来极大的便利。</p><h2 id="新建-OSS-桶">新建 OSS 桶</h2><ul><li>新建一个储存桶，记录下<code>桶名称</code></li><li>新建一个RAM角色</li><li>记录下 <code>AccessKey ID</code> 和 <code>AccessKey Secret</code></li></ul><p><img src="https://img.limour.top/2024/11/01/6724624067144.webp" alt=""><br><img src="https://img.limour.top/2024/11/01/672462819133e.webp" alt=""></p><ul><li>授予访问权限，用 <code>http</code> 而非 <code>https</code>，因为 <code>ossfs-webdav</code> 很老了</li></ul><p><img src="https://img.limour.top/2024/11/01/672462bd10e86.webp" alt=""></p><ul><li>记录下<code>内网 EndPoint</code></li></ul><p><img src="https://img.limour.top/2024/11/01/6724631500a13.webp" alt=""></p><h2 id="转-WebDAV">转 WebDAV</h2><ul><li><a href="/Docker-bu-shu-Nginx-Proxy-Manager">反向代理服务</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/app/ossfs &amp;&amp; <span class="hljs-built_in">cd</span> ~/app/ossfs &amp;&amp; nano docker-compose.yml<br>sudo docker compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">ossfs:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">xxx.limour.top/yindaheng98/ossfs-webdav</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">cap_add:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SYS_ADMIN</span><br>    <span class="hljs-attr">devices:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/dev/fuse</span><br>    <span class="hljs-attr">security_opt:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">apparmor=unconfined</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">SERVER_NAMES:</span> <span class="hljs-string">zotero.limour.top</span><br>      <span class="hljs-attr">BucketName:</span> <span class="hljs-string">你的BucketName</span><br>      <span class="hljs-attr">AccessKeyId:</span> <span class="hljs-string">你的AccessKeyId</span><br>      <span class="hljs-attr">AccessKeySecret:</span> <span class="hljs-string">你的AccessKeySecret</span><br>      <span class="hljs-attr">EndPoint:</span> <span class="hljs-string">你的EndPoint</span><br>      <span class="hljs-attr">USERNAME:</span> <span class="hljs-string">你的webdav用户名</span><br>      <span class="hljs-attr">PASSWORD:</span> <span class="hljs-string">你的webdav密码</span><br>      <span class="hljs-attr">OWNER_USER:</span> <span class="hljs-string">www-data</span><br>      <span class="hljs-attr">OWNER_GROUP:</span> <span class="hljs-string">www-data</span><br> <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">default:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">ngpm</span><br></code></pre></td></tr></table></figure><h2 id="配置反代">配置反代</h2><p><img src="https://img.limour.top/2024/11/01/672463b1b0c91.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/oss/">oss</category>
      
      
      <comments>https://hexo.limour.top/Mount-OSS-as-a-WebMAV#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】内网使用P4wnP1传递文件</title>
      <link>https://hexo.limour.top/internal-network-uses-p4wnp1-to-transfer-file</link>
      <guid>https://hexo.limour.top/internal-network-uses-p4wnp1-to-transfer-file</guid>
      <pubDate>Sun, 27 Oct 2024 07:05:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;最近实习轮转到预防了，需要在社区实习4周，而社区医生有一堆需要重复填报的数据，因此写了下面的脚本来自动化填写。而问题是社区的电脑禁用了U盘等设备的使用，因此想将这个脚本传递到其他电脑上只能手打一次。。。&lt;br&gt;
于是想到的吃灰已久的&lt;code&gt;树莓派zero w&lt;/code</description>
        
      
      
      
      <content:encoded><![CDATA[<p>最近实习轮转到预防了，需要在社区实习4周，而社区医生有一堆需要重复填报的数据，因此写了下面的脚本来自动化填写。而问题是社区的电脑禁用了U盘等设备的使用，因此想将这个脚本传递到其他电脑上只能手打一次。。。<br>于是想到的吃灰已久的<code>树莓派zero w</code>，给它刷上了 <code>P4wnP1 ALOA</code> 来模拟键盘输入，这样就不用手打了。</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-8f7bdefe" role="button" aria-expanded="false" aria-controls="collapse-8f7bdefe">        <div class="fold-arrow">▶</div>点开查看社区填报自动化脚本      </div>      <div class="fold-collapse collapse" id="collapse-8f7bdefe">        <div class="fold-content">          <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-params">timeout</span>) &#123;<br>    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">setTimeout</span>(resolve, timeout * <span class="hljs-number">1000</span>);<br>    &#125;<br>    );<br>&#125;<br>;<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">processRows</span>(<span class="hljs-params"></span>) &#123;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">29</span>; i++) &#123;<br><br>        <span class="hljs-keyword">var</span> orignialWindowOpen = <span class="hljs-variable language_">window</span>.<span class="hljs-property">open</span>;<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">open</span> = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">var</span> taskid = i + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">var</span> newWindow = orignialWindowOpen.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>);<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1</span>);<br>            <span class="hljs-comment">// var newWindow = window;  //调试用</span><br>            <span class="hljs-comment">// console.log(&quot;newWindow &quot;, newWindow);</span><br>            <span class="hljs-comment">// 100s 强制关闭</span><br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>                <span class="hljs-keyword">if</span> (!newWindow.<span class="hljs-property">closed</span>) &#123;<br>                    newWindow.<span class="hljs-title function_">close</span>();<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Manipulating Row&quot;</span>, taskid, <span class="hljs-string">&quot;Window closed at 100s&quot;</span>);<br>                &#125;<br>            &#125;<br>            , <span class="hljs-number">100000</span>);<br><br>            <span class="hljs-keyword">var</span> alerted = <span class="hljs-literal">false</span>;<br>            newWindow.<span class="hljs-property">confirm</span> = <span class="hljs-function">(<span class="hljs-params">m</span>)=&gt;</span><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;confirm&#x27;</span>, taskid, m);<br>            newWindow.<span class="hljs-property">alert</span> = <span class="hljs-function">(<span class="hljs-params">m</span>)=&gt;</span>&#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;alert&#x27;</span>, taskid, m);<br>                alerted = <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">var</span> <span class="hljs-title function_">isElLoaded</span> = <span class="hljs-keyword">async</span> sl=&gt;&#123;<br>                <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.05</span>);<br>                <span class="hljs-keyword">if</span> (newWindow.<span class="hljs-property">closed</span>) &#123;<br>                    <span class="hljs-keyword">throw</span> taskid + <span class="hljs-string">&quot;newWindow.closed&quot;</span><br>                &#125;<br>                <span class="hljs-keyword">while</span> (newWindow.<span class="hljs-property">document</span>.<span class="hljs-title function_">querySelector</span>(sl) === <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>)=&gt;</span>&#123;<br>                        <span class="hljs-title function_">requestAnimationFrame</span>(resolve)<br>                    &#125;<br>                    );<br>                &#125;<br>                ;<span class="hljs-keyword">return</span> newWindow.<span class="hljs-property">document</span>.<span class="hljs-title function_">querySelector</span>(sl);<br>            &#125;<br>            ;<br>            <span class="hljs-keyword">function</span> <span class="hljs-title function_">rrrand</span>(<span class="hljs-params">min, max</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (max - min + <span class="hljs-number">1</span>)) + min<br>            &#125;<br>            ;<span class="hljs-keyword">function</span> <span class="hljs-title function_">setValue</span>(<span class="hljs-params">el, min, max</span>) &#123;<br>                <span class="hljs-keyword">if</span> (!el || !el.<span class="hljs-property">value</span>) &#123;<br>                    el.<span class="hljs-property">value</span> = <span class="hljs-title function_">rrrand</span>(min, max).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">1</span>);<br>                &#125;<br>            &#125;<br>            ;<span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.5</span>);<br><br>            taskid = (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#Name&quot;</span>)).<span class="hljs-property">value</span> + <span class="hljs-string">&#x27; &#x27;</span> + taskid;<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset1 &gt; fieldset &gt; div &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset15 &gt; fieldset &gt; div &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset3 &gt; fieldset &gt; legend &gt; span.title_icon.plus_icon&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset3 &gt; fieldset &gt; div:nth-child(2) &gt; div:nth-child(2) &gt; div &gt; label:nth-child(4) &gt; input[type=radio]&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset3 &gt; fieldset &gt; div:nth-child(3) &gt; div &gt; label:nth-child(1) &gt; input[type=radio]&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset3 &gt; fieldset &gt; div:nth-child(4) &gt; div:nth-child(2) &gt; div &gt; label:nth-child(1) &gt; input[type=radio]&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#yjqk&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(2) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(3) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(4) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(5) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(6) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(7) &gt; div &gt; label:nth-child(1) &gt; input&quot;</span>)).<span class="hljs-property">checked</span> = <span class="hljs-literal">true</span>;<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(8) &gt; div &gt; label:nth-child(1) &gt; input[type=radio]&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#d1 &gt; div.fieldset4 &gt; fieldset &gt; div:nth-child(9) &gt; div &gt; label:nth-child(1) &gt; input[type=radio]&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">0.3</span>);<br><br>            <span class="hljs-keyword">var</span> sg = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#sg&quot;</span>);<br>            <span class="hljs-keyword">var</span> tz = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#tz&quot;</span>);<br>            <span class="hljs-keyword">var</span> yw = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#yw&quot;</span>);<br>            <span class="hljs-keyword">var</span> age = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#Age&quot;</span>);<br>            <span class="hljs-keyword">var</span> gender = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#Gender&quot;</span>);<br>            <span class="hljs-keyword">var</span> xy1 = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#xy1&quot;</span>);<br>            <span class="hljs-keyword">var</span> xy2 = <span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#xy2&quot;</span>);<br>            <span class="hljs-keyword">var</span> isHypertension = (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&#x27;#d1 &gt; div.fieldset1 &gt; fieldset &gt; div &gt; div &gt; label:nth-child(2) &gt; input[type=checkbox]&#x27;</span>)).<span class="hljs-property">checked</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(taskid, <span class="hljs-string">&#x27;isHypertension&#x27;</span>, isHypertension)<br><br>            <span class="hljs-title function_">setValue</span>(xy1, <span class="hljs-number">110</span>, <span class="hljs-number">130</span>);<br>            <span class="hljs-title function_">setValue</span>(xy2, <span class="hljs-number">75</span>, <span class="hljs-number">85</span>);<br><br>            <span class="hljs-keyword">if</span> (gender.<span class="hljs-property">value</span> == <span class="hljs-string">&#x27;男&#x27;</span>) &#123;<br>                <span class="hljs-title function_">setValue</span>(sg, <span class="hljs-number">165</span>, <span class="hljs-number">180</span>);<br>                <span class="hljs-title function_">setValue</span>(tz, <span class="hljs-number">60</span>, <span class="hljs-number">80</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-title function_">setValue</span>(sg, <span class="hljs-number">150</span>, <span class="hljs-number">170</span>);<br>                <span class="hljs-title function_">setValue</span>(tz, <span class="hljs-number">50</span>, <span class="hljs-number">70</span>);<br>            &#125;<br>            ;<span class="hljs-keyword">var</span> sgv = <span class="hljs-built_in">parseFloat</span>(sg.<span class="hljs-property">value</span>);<br>            <span class="hljs-keyword">var</span> tzv = <span class="hljs-built_in">parseFloat</span>(tz.<span class="hljs-property">value</span>);<br>            <span class="hljs-keyword">var</span> bmi = tzv / (sgv * sgv / <span class="hljs-number">10000</span>);<br>            <span class="hljs-keyword">var</span> bzyw = sgv * bmi / <span class="hljs-number">50</span>;<br>            <span class="hljs-title function_">setValue</span>(yw, bzyw, bzyw);<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#span_btn_save&quot;</span>)).<span class="hljs-title function_">click</span>();<br><br>            <span class="hljs-keyword">while</span> (!(<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#jjkzdqt&quot;</span>)).<span class="hljs-property">value</span>) &#123;<br>                <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(taskid, (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#jjkzdqt&quot;</span>)).<span class="hljs-property">value</span>);<br><br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#A6&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(taskid, alerted);<br>            alerted = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">while</span> (!alerted) &#123;<br>                <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#sp3&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">2</span>);<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#span_btn_Scheme &gt; a&quot;</span>)).<span class="hljs-title function_">click</span>();<br>            <span class="hljs-keyword">while</span> ((<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#YXFAMAIN&quot;</span>)).<span class="hljs-property">children</span>.<span class="hljs-property">length</span> &lt; <span class="hljs-number">2</span>) &#123;<br>                <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1</span>);<br>            &#125;<br>            (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#div_spn &gt; span.buttons.btn_save6 &gt; a&quot;</span>)).<span class="hljs-title function_">click</span>();<br><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(taskid, <span class="hljs-string">&#x27;已选方案数量：&#x27;</span>, (<span class="hljs-keyword">await</span> <span class="hljs-title function_">isElLoaded</span>(<span class="hljs-string">&quot;#SchemeList &gt; div&quot;</span>)).<span class="hljs-property">children</span>.<span class="hljs-property">length</span>)<br>            newWindow.<span class="hljs-title function_">close</span>();<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Manipulating Row&quot;</span>, taskid, <span class="hljs-string">&quot;Window closed&quot;</span>);<br>            <span class="hljs-keyword">return</span> newWindow;<br>        &#125;<br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Manipulating Row&quot;</span>, i + <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">var</span> currentRow = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">`#dgvResult_<span class="hljs-subst">$&#123;i&#125;</span>`</span>);<br>        currentRow.<span class="hljs-title function_">click</span>();<br>        <span class="hljs-title function_">showForm</span>(<span class="hljs-string">&#x27;ibtnUserDefine&#x27;</span>, <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">30</span>);<br><br>        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">focus</span>();<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">open</span> = orignialWindowOpen;<br>    &#125;<br>    ;<br>&#125;<br>;<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">limour_main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>        <span class="hljs-keyword">await</span> <span class="hljs-title function_">processRows</span>();<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#QueryButton1_LinkButton1&quot;</span>).<span class="hljs-title function_">click</span>();<br>        <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">35</span>);<br>    &#125;<br>&#125;<br>;<span class="hljs-title function_">limour_main</span>()<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><h2 id="24-12-04-更新">24.12.04 更新</h2><ul><li>演示 Demo，勉强能用，识别效率不如后面的 Python 版译码器</li><li>靶机选择文件生成喷泉码：<a href="https://hexo.limour.top/qrjs.c.html">https://hexo.limour.top/qrjs.c.html</a></li><li>手机打开相机对准喷泉码：<a href="https://hexo.limour.top/qrjs.s.html">https://hexo.limour.top/qrjs.s.html</a></li><li>如果靶机无法联网，请参考下文的 Bad USB 技术</li></ul><h2 id="24-11-22-更新">24.11.22 更新</h2><p><img src="https://img.limour.top/2024/11/22/67407ef4d2bcd.webp" alt=""></p><p>使用一段时间后，发现常用的还是往外传病历，因此使用 10 块钱的国产 <code>PICO</code> 板固化了一版专门用于写入 <code>client.html</code> 的固件</p><ol><li>按住 <code>boot</code> 键插入电脑，松开按钮 ，将 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9yZWxlYXNlcw==" rel="noopener external nofollow noreferrer">pico-badusb.uf2</a> 拖入根目录</li><li>自动重启后，将 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy90cmVlL21haW4vcGljby1iYWR1c2I=" rel="noopener external nofollow noreferrer">修改后</a> 的 <code>boot.py</code> 和 <code>main.py</code> 拖入根目录</li><li>再次自动重启后，会发现不再挂载存储，此时按一下 <code>reset</code> 键</li><li>第三次重启后，将 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vcGF5bG9hZC50eHQ=" rel="noopener external nofollow noreferrer">payload.txt</a> 拖入根目录</li><li>右下角安全删除U盘硬件，<code>Bad USB</code> 就做好了。使用时直接插入靶机，等 6 秒就会开始执行。</li><li>要更新 <code>payload.txt</code> 的话，只需要在 6 秒内，按下 <code>reset</code> 键重启，就会挂载为U盘了。</li></ol><h2 id="准备工作">准备工作</h2><ul><li><code>P4wnP1_aloa</code> 的<a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL1JvZ2FuRGF3ZXMvUDR3blAxX2Fsb2EvcmVsZWFzZXMvdGFnL3YwLjEuMS1iZXRh" rel="noopener external nofollow noreferrer">镜像</a>，解压为 <code>.img</code></li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9kYXRhc2V0cy9MaW1vdXIvYXJjaHZpZS9ibG9iL21haW4vU0QlRTUlOEQlQTElRTclODMlQTclRTUlODYlOTklRTUlQjclQTUlRTUlODUlQjcuN3o=" rel="noopener external nofollow noreferrer">SD卡烧写工具</a></li></ul><p>写入镜像的教程很多，就不赘述了，先格式化SD卡，然后写入<code>.img</code>文件就行</p><h2 id="连接树莓派">连接树莓派</h2><ul><li>将 <code>树莓派zero w</code> 的带 <code>USB</code> 标志的口通过手机数据线连接到靶机上，<code>PWR</code>口不用管</li><li>等待一个 <code>P4WNp1</code> 的 WIFI，连接它，密码是 <code>MaMe82-P4wnP1</code>，此时IP为 <code>172.24.0.1</code></li><li>或者也可以搜索一个<code>P4wnP1</code>的蓝牙，连接它，默认PIN是 <code>1337</code>，然后加入蓝牙个人区域网，此时IP为 <code>172.26.0.1</code></li><li>然后可以ssh连接对应的IP，默认用户名<code>root</code>，密码<code>toor</code></li></ul><p><img src="https://img.limour.top/2024/10/27/671df3c9042f0.webp" alt=""></p><h2 id="配置-USB">配置 USB</h2><ul><li>访问 <code>http://172.24.0.1:8000/</code> (蓝牙就算了，太慢了打不开)</li><li>此时靶机会有一个驱动错误的提示，我们需要将 <code>USB Gadget Settings</code> 中的 <code>CDC ECM</code> 和 <code>RNDIS</code> 两项关闭</li><li>只保留 <code>Keyboard</code> 和 <code>Mouse</code> 两项，然后点击 <code>STORE</code> 和 <code>DEPLOY STORED</code> 后等一会，驱动错误提示就会消失了</li></ul><p><img src="https://img.limour.top/2024/10/27/671df3e21fc9b.webp" alt=""><br><img src="https://img.limour.top/2024/10/27/671df5156410b.webp" alt=""></p><h2 id="测试-HIDScript">测试 HIDScript</h2><ul><li>从 <code>USB SETTINGS</code> 转到 <code>HIDScrip</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">layout</span>(<span class="hljs-string">&#x27;us&#x27;</span>);<span class="hljs-comment">// 键盘布局</span><br><span class="hljs-title function_">typingSpeed</span>(<span class="hljs-number">50</span>,<span class="hljs-number">100</span>);<span class="hljs-comment">// 敲击按键的时候等待的间隔100毫秒加上0-150毫秒之间的随机值</span><br> <br><span class="hljs-title function_">press</span>(<span class="hljs-string">&quot;GUI r&quot;</span>);         <span class="hljs-comment">//类似按下某个键位然后再抬起来，具体可以看官方文档，和上面的机制相识</span><br><span class="hljs-title function_">delay</span>(<span class="hljs-number">500</span>);             <span class="hljs-comment">//暂停时间</span><br><span class="hljs-title function_">type</span>(<span class="hljs-string">&quot;notepad\n&quot;</span>);      <span class="hljs-comment">//输入字符串，模拟键盘按键</span><br><span class="hljs-title function_">delay</span>(<span class="hljs-number">1500</span>);            <span class="hljs-comment">//暂停时间</span><br><span class="hljs-comment">// moveStepped(x,y);    //鼠标移动，相当于模拟正常运动</span><br><span class="hljs-comment">// moveTo(x,y);         //鼠标移动到设置的坐标点，x和y分别是横纵坐标</span><br><span class="hljs-title function_">type</span>(<span class="hljs-string">&quot;Hello from P4wnP1\n&quot;</span>);<br><br><span class="hljs-title function_">typingSpeed</span>(<span class="hljs-number">10</span>,<span class="hljs-number">20</span>);<br><span class="hljs-keyword">var</span> base64 = <span class="hljs-string">&#x27;SGVsbG8gZnJvbSBQNHduUDE=&#x27;</span> <span class="hljs-comment">// btoa(&#x27;Hello from P4wnP1&#x27;);</span><br><span class="hljs-title function_">type</span>(<span class="hljs-string">&quot;atob(&#x27;&quot;</span> + base64 + <span class="hljs-string">&quot;&#x27;);&quot;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2024/10/27/671df52854a41.webp" alt=""></p><h2 id="关闭树莓派">关闭树莓派</h2><ul><li>不要直接拔电源，不然下次无法开机</li><li>ssh连接后输入 <code>shutdown -h now</code></li><li>等待 LED 灯闪烁熄灭，先别急，再等一会，会再次闪烁后熄灭</li><li>此时可以安全拔掉数据线了</li></ul><h2 id="获取要模拟设备的信息">获取要模拟设备的信息</h2><ul><li>下载 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9kYXRhc2V0cy9MaW1vdXIvYXJjaHZpZS9ibG9iL21haW4vVVNCRGV2aWV3LnJhcg==" rel="noopener external nofollow noreferrer">USBDeview</a></li><li>将靶机的键盘插到自己电脑上，获取<code>序列号</code>、<code>VID</code>、<code>PID</code>等信息，在 <code>P4wnP1</code> 中模拟</li></ul><p><img src="https://img.limour.top/2024/10/29/671fd70dec580.webp" alt=""></p><h2 id="传递-client-html">传递 client.html</h2><ul><li>靶机输入法调成美式键盘</li><li><code>P4wnP1</code> 上运行 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vSElEc2NyaXB0Lmpz" rel="noopener external nofollow noreferrer">HIDscript.js</a></li><li>约 10 分钟后输入结束，此时将文件保存成 <code>client.html</code></li><li>靶机上用 <code>chrome</code> 打开 <code>client.html</code></li><li><code>client.html</code> 上选择要传递的文件，等待二维码开始变化</li></ul><p><img src="https://img.limour.top/2024/10/29/671fd82bcfdeb.webp" alt=""></p><h2 id="接收文件">接收文件</h2><ul><li>宿主机配置对应的环境后运行 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vc2VydmVyLnB5" rel="noopener external nofollow noreferrer">server.py</a></li><li>将摄像头对准动态的二维码</li><li>待搜集足够多的包后，会自动解码，将文件保存到 <code>qr.dl</code> 中，重命名恢复文件</li><li>摄像头推荐用 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWNvbS5wYXMud2ViY2Ft" rel="noopener external nofollow noreferrer">IP Webcam</a>, 电脑连接手机热点即可。</li><li><a href="https://hexo.limour.top/go/#aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9kYXRhc2V0cy9MaW1vdXIvYXJjaHZpZS9ibG9iL21haW4vSVBfV2ViY2FtLmFwa3MuYmlu" rel="noopener external nofollow noreferrer">IP Webcam 备份</a>，使用 MT 管理器安装。</li></ul><h2 id="喷泉码说明">喷泉码说明</h2><p>在编码理论中，喷泉码（也称为无码率抹除码）是一类抹除码，这种编码能够从一组给定的源符号序列中产生一串不限长度的编码符号序列，在理想情况下，从编码符号序列中获得大小和源符号相同或稍大的任意子集，便可恢复源符号。</p><ul><li>对喷泉码感兴趣的话，分别有 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vRkYuanM=" rel="noopener external nofollow noreferrer">js</a> 实现和 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vRkYucHk=" rel="noopener external nofollow noreferrer">python</a> 实现，可互相编解码。</li></ul><h2 id="传送文件">传送文件</h2><ol><li>执行 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vSElEc2NyaXB0X3NhdmUuanM=" rel="noopener external nofollow noreferrer">HIDscript_save.js</a>, 保存为 <code>save.html</code></li><li>打开 <a href="https://hexo.limour.top/go/#aHR0cHM6Ly9naXRodWIuY29tL0xpbW91ci1kZXYvcXJqcy9ibG9iL21haW4vcmVhZF9hc19ISURzY3JpcHQuaHRtbA==" rel="noopener external nofollow noreferrer">read_as_HIDscript.html</a></li><li>选择要传递给靶机的文件，然后执行自动生成的 HIDscript</li><li>执行完毕后打开靶机上保存的 <code>save.html</code>, 将键盘输入的字符粘贴过去，点击转换就会将保存转换的文件</li></ol>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/raspberrypi/">raspberrypi</category>
      
      
      <comments>https://hexo.limour.top/internal-network-uses-p4wnp1-to-transfer-file#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>【记录】搭建端到端加密的Enclosed和局域网传输数据的SnapDrop</title>
      <link>https://hexo.limour.top/Building-an-end-to-end-encrypted-enclosure-and-SnapDrop-for-LAN-data-transmission</link>
      <guid>https://hexo.limour.top/Building-an-end-to-end-encrypted-enclosure-and-SnapDrop-for-LAN-data-transmission</guid>
      <pubDate>Wed, 09 Oct 2024 06:19:19 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Enclosed，一个极简的网络应用程序，旨在发送私人和安全的消息。所有消息都是端到端加密的，确保服务器和存储对内容没有任何了解。用户可以设置密码，定义过期时间（TTL），并选择在阅读后让消息自毁。&lt;/p&gt;
&lt;p&gt;Snapdrop，一个开源的在线文件传输工具，可以在 Win</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Enclosed，一个极简的网络应用程序，旨在发送私人和安全的消息。所有消息都是端到端加密的，确保服务器和存储对内容没有任何了解。用户可以设置密码，定义过期时间（TTL），并选择在阅读后让消息自毁。</p><p>Snapdrop，一个开源的在线文件传输工具，可以在 Windows、Mac、Linux、iOS、Android 任何平台使用，只要我们的设备有浏览器就能用他来传输文件。</p><h2 id="搭建-Enclosed">搭建 Enclosed</h2><ul><li><a href="/Docker-bu-shu-Nginx-Proxy-Manager">反向代理服务</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/app/enclosed &amp;&amp; <span class="hljs-built_in">cd</span> ~/app/enclosed &amp;&amp; <span class="hljs-built_in">touch</span> .<span class="hljs-built_in">env</span> &amp;&amp; nano docker-compose.yml<br>sudo docker compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.6&#x27;</span><br> <br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">enclosed:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">docker.limour.top/corentinth/enclosed:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">env_file:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.env</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./enclosed-data:/app/.data</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/localtime:/etc/localtime:ro</span><br> <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">default:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">ngpm</span><br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2024/10/09/67062314c51e1.webp" alt=""></p><h2 id="搭建-SnapDrop">搭建 SnapDrop</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/app/snapdrop &amp;&amp; <span class="hljs-built_in">cd</span> ~/app/snapdrop &amp;&amp; <span class="hljs-built_in">touch</span> .<span class="hljs-built_in">env</span> &amp;&amp; nano docker-compose.yml<br>sudo docker compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.6&#x27;</span><br> <br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">snapdrop:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">docker.limour.top/linuxserver/snapdrop:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">env_file:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.env</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/localtime:/etc/localtime:ro</span><br> <br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">default:</span><br>    <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">ngpm</span><br></code></pre></td></tr></table></figure><p><img src="https://img.limour.top/2024/10/09/67062351e1a9e.webp" alt=""></p>]]></content:encoded>
      
      
      
      <category domain="https://hexo.limour.top/tags/docker/">docker</category>
      
      <category domain="https://hexo.limour.top/tags/ngpm/">ngpm</category>
      
      
      <comments>https://hexo.limour.top/Building-an-end-to-end-encrypted-enclosure-and-SnapDrop-for-LAN-data-transmission#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
